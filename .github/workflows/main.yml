# v1.1.1.odt
name: Theme CI
on:
  workflow_dispatch:
  push:
    branches: [master, dev]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches: [master, dev]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'


jobs:
  build-package:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client-app

    env: 
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}
      VERSION_SUFFIX: ""
    
    name: ci

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Node.js 10
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v3

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@VP-6108
      id: image
      with:
        path: './client-app'

    - name: Set VERSION_SUFFIX variable
      run: |
        if [ '${{ github.event_name }}' = 'workflow_dispatch' ]; then
          echo "VERSION_SUFFIX=${{ steps.image.outputs.fullSuffix }}" >> $GITHUB_ENV
        else
          echo "VERSION_SUFFIX=${{ steps.image.outputs.suffix }}" >> $GITHUB_ENV
        fi;

    - name: Get changelog
      id: changelog
      uses: VirtoCommerce/vc-github-actions/changelog-generator@master

      # After anp install 'bower install' cmd will be invoked as package.json script
    - name: Npm Install
      run: npm install

    - name: SonarCloud Scan
      uses: VirtoCommerce/vc-github-actions/sonar-theme@master

    - name: Build theme and compress to zip
      run: npm run compress

    - name: Set artifact
      shell: pwsh
      id: artifact
      run: |
        $file = Get-ChildItem -Path ../artifacts -Filter "*.zip" | Select-Object -First 1
        Write-Host "::set-output name=name::$($file.BaseName)_${{ env.VERSION_SUFFIX }}.zip"
        Write-Host "::set-output name=full-name::$($file.FullName)"

    - name: Rename artifact
      if: ${{ github.ref != 'refs/heads/master' }}
      shell: pwsh
      run: |
        Get-ChildItem ${{ steps.artifact.outputs.full-name }} | ForEach-Object {
          Rename-Item $_ -NewName ${{steps.artifact.outputs.name}}
        }


    - name: Upload a Build Artifact to Azure Blob Storage
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/master')}}
      uses: bacongobbler/azure-blob-storage-upload@v1.1.1
      with:
        source_dir: './artifacts'
        container_name: 'packages'
        connection_string: ${{ secrets.BLOB_CONNECTION_STRING }}
        sync: false

    - name: Create Release
      if: ${{ github.ref == 'refs/heads/master' }}
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.image.outputs.prefix }}
        release_name: ${{ steps.image.outputs.prefix }}
        draft: false
        prerelease: false
        body: ${{ steps.changelog.outputs.changelog }}

    - name: Upload Release Asset
      if: ${{ github.ref == 'refs/heads/master' }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: './artifacts'
        asset_name: ${{ steps.artifact.outputs.name }}
        asset_content_type: application/zip        