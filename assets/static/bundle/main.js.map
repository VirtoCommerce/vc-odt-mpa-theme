{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/components/account/account.component.html","/./src/app/components/active-order/active-order-mobile/active-order-mobile.component.html","/./src/app/components/active-order/active-order.component.html","/./src/app/components/active-order/change-product-quantity-active-order/change-product-quantity-active-order.component.html","/./src/app/components/active-order/checkout-modal/checkout-modal.component.html","/./src/app/components/alerts/alerts.component.html","/./src/app/components/bulk-order/bulk-order-csv/bulk-order-csv.component.html","/./src/app/components/bulk-order/bulk-order-manual/bulk-order-item/bulk-order-item.component.html","/./src/app/components/bulk-order/bulk-order-manual/bulk-order-manual.component.html","/./src/app/components/bulk-order/bulk-order.component.html","/./src/app/components/catalog/catalog.component.html","/./src/app/components/catalog/categories/categories.component.html","/./src/app/components/catalog/change-product-quantity/change-product-quantity.component.html","/./src/app/components/catalog/mobile-cart-summary/mobile-cart-summary.component.html","/./src/app/components/catalog/search-products/search-products.component.html","/./src/app/components/company/company-details/company-details.component.html","/./src/app/components/company/company-users/company-users.component.html","/./src/app/components/company/company.component.html","/./src/app/components/company/edit-company-user-modal-form/edit-company-user-modal-form.component.html","/./src/app/components/company/role-management/role-management.component.html","/./src/app/components/container/footer-panel/footer-panel.component.html","/./src/app/components/container/header-panel/header-panel.component.html","/./src/app/components/container/main-panel/main-panel.component.html","/./src/app/components/forapproval/forapproval-details/forapproval-details.component.html","/./src/app/components/forapproval/forapproval.component.html","/./src/app/components/menu/menu.component.html","/./src/app/components/orders/invoice/invoice.component.html","/./src/app/components/orders/order-details/order-details.component.html","/./src/app/components/orders/orders.component.html","/./src/app/components/page-size-selector/page-size-selector.component.html","/./src/app/components/product-details/product-details.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.scss","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/components/account/account.component.scss","/./src/app/components/account/account.component.ts","/./src/app/components/active-order/active-order-mobile/active-order-mobile.component.scss","/./src/app/components/active-order/active-order-mobile/active-order-mobile.component.ts","/./src/app/components/active-order/active-order.component.scss","/./src/app/components/active-order/active-order.component.ts","/./src/app/components/active-order/change-product-quantity-active-order/change-product-quantity-active-order.component.scss","/./src/app/components/active-order/change-product-quantity-active-order/change-product-quantity-active-order.component.ts","/./src/app/components/active-order/checkout-modal/checkout-modal.component.scss","/./src/app/components/active-order/checkout-modal/checkout-modal.component.ts","/./src/app/components/alerts/alerts.component.ts","/./src/app/components/bulk-order/bulk-order-csv/bulk-order-csv.component.scss","/./src/app/components/bulk-order/bulk-order-csv/bulk-order-csv.component.ts","/./src/app/components/bulk-order/bulk-order-manual/bulk-order-item/bulk-order-item.component.scss","/./src/app/components/bulk-order/bulk-order-manual/bulk-order-item/bulk-order-item.component.ts","/./src/app/components/bulk-order/bulk-order-manual/bulk-order-manual.component.scss","/./src/app/components/bulk-order/bulk-order-manual/bulk-order-manual.component.ts","/./src/app/components/bulk-order/bulk-order.component.scss","/./src/app/components/bulk-order/bulk-order.component.ts","/./src/app/components/catalog/catalog.component.scss","/./src/app/components/catalog/catalog.component.ts","/./src/app/components/catalog/categories/categoires.component.ts","/./src/app/components/catalog/categories/categories.component.scss","/./src/app/components/catalog/change-product-quantity/change-product-quantity.component.scss","/./src/app/components/catalog/change-product-quantity/change-product-quantity.component.ts","/./src/app/components/catalog/mobile-cart-summary/mobile-cart-summary.component.scss","/./src/app/components/catalog/mobile-cart-summary/mobile-cart-summary.component.ts","/./src/app/components/catalog/search-products/search-products.component.scss","/./src/app/components/catalog/search-products/search-products.component.ts","/./src/app/components/company/company-details/company-details.component.scss","/./src/app/components/company/company-details/company-details.component.ts","/./src/app/components/company/company-users/company-users.component.scss","/./src/app/components/company/company-users/company-users.component.ts","/./src/app/components/company/company.component.scss","/./src/app/components/company/company.component.ts","/./src/app/components/company/edit-company-user-modal-form/edit-company-user-modal-form.component.scss","/./src/app/components/company/edit-company-user-modal-form/edit-company-user-modal-form.component.ts","/./src/app/components/company/role-management/role-management.component.scss","/./src/app/components/company/role-management/role-management.component.ts","/./src/app/components/container/footer-panel/footer-panel.component.scss","/./src/app/components/container/footer-panel/footer-panel.component.ts","/./src/app/components/container/header-panel/header-panel.component.scss","/./src/app/components/container/header-panel/header-panel.component.ts","/./src/app/components/container/main-panel/main-panel.component.scss","/./src/app/components/container/main-panel/main-panel.component.ts","/./src/app/components/forapproval/forapproval-details/forapproval-details.component.scss","/./src/app/components/forapproval/forapproval-details/forapproval-details.component.ts","/./src/app/components/forapproval/forapproval.component.scss","/./src/app/components/forapproval/forapproval.component.ts","/./src/app/components/menu/menu.component.scss","/./src/app/components/menu/menu.component.ts","/./src/app/components/orders/invoice/invoice.component.scss","/./src/app/components/orders/invoice/invoice.component.ts","/./src/app/components/orders/order-details/order-details.component.scss","/./src/app/components/orders/order-details/order-details.component.ts","/./src/app/components/orders/orders.component.scss","/./src/app/components/orders/orders.component.ts","/./src/app/components/page-size-selector/page-size-selector.component.scss","/./src/app/components/page-size-selector/page-size-selector.component.ts","/./src/app/components/product-details/product-details.component.scss","/./src/app/components/product-details/product-details.component.ts","/./src/app/directives/match-value.directive.ts","/./src/app/directives/only-number.directive.ts","/./src/app/directives/remove-wrapper.directive.ts","/./src/app/models/dto/category.ts","/./src/app/models/dto/common/paged-search-criteria.ts","/./src/app/models/dto/iorder.ts","/./src/app/models/dto/product.ts","/./src/app/models/inner/pagination-info.ts","/./src/app/models/organization.ts","/./src/app/models/product.ts","/./src/app/models/user.ts","/./src/app/modules/confirm-modal/confirm-modal-service.ts","/./src/app/modules/confirm-modal/confirm-modal.module.ts","/./src/app/services/active-order.service.ts","/./src/app/services/alerts.service.ts","/./src/app/services/auth-guard.service.ts","/./src/app/services/catalog.service.ts","/./src/app/services/converters/organization-converter.service.ts","/./src/app/services/converters/product-converter.service.ts","/./src/app/services/converters/user-converter.service.ts","/./src/app/services/index.ts","/./src/app/services/interceptors/request-interceptor.ts","/./src/app/services/mobile-view.service.ts","/./src/app/services/orders.service.ts","/./src/app/services/organization.service.ts","/./src/app/services/user.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<block-ui>\\r\\n  <div id=\\\"layout\\\">\\r\\n    <app-header-panel></app-header-panel>\\r\\n    <app-main-panel></app-main-panel>\\r\\n    <app-footer-panel></app-footer-panel>\\r\\n  </div>\\r\\n</block-ui>\\r\\n\\r\\n<ng-template appConfirm>\\r\\n  <app-confirm-modal-component></app-confirm-modal-component>\\r\\n</ng-template>\\r\\n\"","module.exports = \"<main class=\\\"main container\\\">\\r\\n  <div class=\\\"account\\\">\\r\\n    <h1>My account</h1>\\r\\n\\r\\n    <!-- Tabs work not js only css -->\\r\\n    <div class=\\\"tabs\\\">\\r\\n      <input class=\\\"tabs__input\\\" type=\\\"radio\\\" name=\\\"tabs\\\" id=\\\"tab-1\\\" checked />\\r\\n      <label for=\\\"tab-1\\\" class=\\\"tabs__item\\\">\\r\\n        User Details\\r\\n        <!-- <span class=\\\"mobile-name\\\">User Details</span> -->\\r\\n      </label>\\r\\n      <div class=\\\"tabs__content\\\" *ngIf=\\\"user\\\">\\r\\n        <fieldset>\\r\\n          <div class=\\\"form-row form-group\\\">\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <label for=\\\"login\\\">Login</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"login\\\" [ngModel]=\\\"user.userName\\\" readonly />\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <label for=\\\"email\\\">Email</label>\\r\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"user.email\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <label for=\\\"phone\\\">Phone</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"user.phoneNumber\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n        <a class=\\\"btn btn--green\\\" (click)=\\\"updateUser()\\\">Update User</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"<div class=\\\"swipe swipe--order\\\" [ngClass]=\\\"{'swipe--opened': isOpen}\\\">\\r\\n  <div class=\\\"swipe__header\\\">\\r\\n      <div class=\\\"swipe__header-t\\\" *ngIf=\\\"(cart$ | async) as cart\\\">\\r\\n          Your Order\\r\\n          <a (click)=\\\"clear()\\\" *ngIf=\\\"cart.itemsCount != 0\\\" class=\\\"swipe__header-link\\\">Remove all</a>\\r\\n      </div>\\r\\n      <div class=\\\"swipe__close\\\" (click)=\\\"closeSidebar()\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"swipe__body\\\" *ngIf=\\\"(cart$ | async) as cart\\\">\\r\\n      <div class=\\\"order\\\">\\r\\n          <div class=\\\"order__info\\\">\\r\\n              <div class=\\\"list list--total\\\">\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      Subtotal <span class=\\\"list__count\\\">{{cart.subTotal.formattedAmount}}</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      Shipping <span class=\\\"list__count free\\\">{{cart.shippingTotal.formattedAmount}}</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      Total <span class=\\\"list__count\\\">{{cart.subTotal.formattedAmount}}</span>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"order__item\\\" *ngFor=\\\"let item of cart.items\\\">\\r\\n              <a class=\\\"order__item-remove\\\" (click)=\\\"removeItem(item)\\\">Remove item</a>\\r\\n              <div class=\\\"order__item-name\\\">{{item.product.name}}</div>\\r\\n              <div class=\\\"order__item-brand\\\">Brand name</div>\\r\\n              <div class=\\\"order__item-model\\\">Model: 0000 <span class=\\\"divider\\\">|</span>SKU: {{item.product.sku}}</div>\\r\\n              <div class=\\\"order__item-descr\\\">Description item</div>\\r\\n              <div class=\\\"order__item-other\\\">\\r\\n                  <div class=\\\"order__item-price\\\">{{item.extendedPrice.formattedAmount}}</div>\\r\\n                  <app-change-product-quantity-active-order [cart]=\\\"cart\\\" [lineItem]=\\\"item\\\"></app-change-product-quantity-active-order>\\r\\n              </div>\\r\\n          </div>\\r\\n          <a [ngClass]=\\\"{'disabled': cart.itemsCount === 0}\\\" (click)=\\\"checkout(cart)\\\" class=\\\"btn btn--lg btn--green btn--block mt-auto\\\">Checkout</a>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<!-- <app-active-order-header [userName]=\\\"userName\\\" [orderId]=\\\"orderId\\\"></app-active-order-header>\\r\\n<app-active-order-total\\r\\n    [countItems]=\\\"countItems\\\"\\r\\n    [subTotal]=\\\"subTotal\\\"\\r\\n    [shipping]=\\\"shipping\\\"\\r\\n    [total]=\\\"total\\\">\\r\\n</app-active-order-total>\\r\\n<app-active-order-detail [products]=\\\"products\\\" ></app-active-order-detail> -->\\r\\n\\r\\n<div class=\\\"sidebar__body order\\\" *ngIf=\\\"(cart$ | async) as cart\\\" >\\r\\n  <div class=\\\"order__info\\\">\\r\\n    <div class=\\\"order__t\\\">\\r\\n      Your Order\\r\\n      <a class=\\\"order__t-link\\\" *ngIf=\\\"cart.itemsCount != 0\\\" (click)=\\\"clear()\\\">Remove all</a>\\r\\n    </div>\\r\\n    <div class=\\\"order__text\\\">You have {{cart.itemsCount}} items in your order</div>\\r\\n    <div class=\\\"list list--total\\\">\\r\\n      <div class=\\\"list__item\\\">\\r\\n        Subtotal <span class=\\\"list__count\\\">{{cart.subTotal.formattedAmount}}</span>\\r\\n      </div>\\r\\n      <div class=\\\"list__item\\\">\\r\\n        Shipping <span class=\\\"list__count free\\\">{{cart.shippingTotal.formattedAmount}}</span>\\r\\n      </div>\\r\\n      <div class=\\\"list__item\\\">\\r\\n        Total <span class=\\\"list__count\\\">{{cart.subTotal.formattedAmount}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"order__item\\\" *ngFor=\\\"let item of cart.items\\\">\\r\\n    <a class=\\\"order__item-remove\\\" (click)=\\\"removeItem(item)\\\" >Remove item</a>\\r\\n    <div class=\\\"order__item-name\\\">{{item.product.name}}</div>\\r\\n    <div class=\\\"order__item-brand\\\">Brand name</div>\\r\\n    <div class=\\\"order__item-model\\\">\\r\\n      Model: 0000 <span class=\\\"divider\\\">|</span> SKU: {{item.product.sku}}\\r\\n    </div>\\r\\n    <div class=\\\"order__item-descr\\\">Description item</div>\\r\\n    <div class=\\\"order__item-other\\\">\\r\\n      <div class=\\\"order__item-price\\\">{{item.extendedPrice.formattedAmount}}</div>\\r\\n      <app-change-product-quantity-active-order [cart]=\\\"cart\\\" [lineItem]=\\\"item\\\"></app-change-product-quantity-active-order>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"sidebar__footer\\\">\\r\\n    <a class=\\\"btn btn--green btn--block\\\" [ngClass]=\\\"{'disabled': cart.itemsCount === 0}\\\"(click)=\\\"checkout(cart)\\\">Checkout</a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"input-group input-group--qty input-group--sm mt-auto\\\" appRemoveWrapper>\\r\\n  <a class=\\\"btn btn--white\\\" (click)=\\\"decrementQuantity(lineItem)\\\">\\r\\n    <span class=\\\"btn__ico btn__ico--minus\\\"></span>\\r\\n  </a>\\r\\n  <input type=\\\"text\\\" OnlyNumber=\\\"true\\\" class=\\\"input-group__input\\\"\\r\\n  [value]=\\\"lineItem.quantity\\\" (keyup)=\\\"onChangeQuantity($event.target)\\\">\\r\\n  <a class=\\\"btn btn--white\\\" (click)=\\\"incrementQuantity(lineItem)\\\">\\r\\n    <span class=\\\"btn__ico btn__ico--plus\\\"></span>\\r\\n  </a>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<main class=\\\"main container\\\">\\r\\n  <div class=\\\"order\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\" id=\\\"modal-title\\\">Order details information</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-describedby=\\\"modal-title\\\" (click)=\\\"closeModal()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      <div class=\\\"accordion\\\">\\r\\n          <div class=\\\"accordion__item accordion__item--active\\\" (click)=\\\"toggleAccordion($event)\\\">\\r\\n              <div class=\\\"accordion__header\\\">\\r\\n                  <div class=\\\"accordion__t\\\">Details</div>\\r\\n                  <svg class=\\\"accordion__ico\\\" width=\\\"13px\\\" height=\\\"8px\\\" viewBox=\\\"0 0 13 8\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                      <g id=\\\"Version-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n                          <g id=\\\"Catalog\\\" transform=\\\"translate(-1027.000000, -961.000000)\\\" class=\\\"fill\\\">\\r\\n                              <polygon id=\\\"Fill-1\\\" transform=\\\"translate(1033.414000, 964.914000) translate(-1033.414000, -964.914000) \\\" points=\\\"1038.414 961 1033.415 966 1028.414 961 1027 962.414 1033.415 968.828 1039.828 962.414\\\"></polygon>\\r\\n                          </g>\\r\\n                      </g>\\r\\n                  </svg>\\r\\n              </div>\\r\\n              <div class=\\\"accordion__content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-12\\\">\\r\\n                          <div class=\\\"list list--total\\\">\\r\\n                              <div class=\\\"list__item\\\">\\r\\n                                  Subtotal <span class=\\\"list__count\\\">{{cart.subTotal.formattedAmount}}</span>\\r\\n                              </div>\\r\\n                              <div class=\\\"list__item\\\">\\r\\n                                  Shipping <span class=\\\"list__count\\\">{{cart.shippingTotal.formattedAmount}}</span>\\r\\n                              </div>\\r\\n                              <div class=\\\"list__item\\\">\\r\\n                                  Total <span class=\\\"list__count\\\">{{cart.subTotal.formattedAmount}}</span>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"accordion__item\\\">\\r\\n              <div class=\\\"accordion__header\\\" (click)=\\\"toggleOrderDetails($event)\\\">\\r\\n                  <div class=\\\"accordion__t\\\">Order details</div>\\r\\n                  <svg class=\\\"accordion__ico\\\" width=\\\"13px\\\" height=\\\"8px\\\" viewBox=\\\"0 0 13 8\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                      <g id=\\\"Version-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n                          <g id=\\\"Catalog\\\" transform=\\\"translate(-1027.000000, -961.000000)\\\" class=\\\"fill\\\">\\r\\n                              <polygon id=\\\"Fill-1\\\" transform=\\\"translate(1033.414000, 964.914000) translate(-1033.414000, -964.914000) \\\" points=\\\"1038.414 961 1033.415 966 1028.414 961 1027 962.414 1033.415 968.828 1039.828 962.414\\\"></polygon>\\r\\n                          </g>\\r\\n                      </g>\\r\\n                  </svg>\\r\\n              </div>\\r\\n              <cdk-virtual-scroll-viewport itemSize=\\\"207\\\" style=\\\"height: 207px\\\" *ngIf=\\\"showOrderItems\\\">\\r\\n                <div *cdkVirtualFor=\\\"let item of cart.items\\\" class=\\\"accordion__content\\\">\\r\\n                  <div class=\\\"order__item\\\">\\r\\n                  <div class=\\\"order__item-name\\\">{{item.product.name}}</div>\\r\\n                  <div class=\\\"order__item-brand\\\">Impression Tray</div>\\r\\n                  <div class=\\\"order__item-model\\\">Model: 2120 <span class=\\\"divider\\\">| </span>SKU: {{item.product.sku}}</div>\\r\\n                  <div class=\\\"order__item-descr\\\">Case of 10 Bags with 12 per Bag</div>\\r\\n                  <div class=\\\"order__item-other\\\">\\r\\n                      <div class=\\\"order__item-price\\\">Unit price: {{item.placedPrice.formattedAmount}}</div>\\r\\n                  </div>\\r\\n                  <div class=\\\"order__item-other\\\">\\r\\n                    <div class=\\\"order__item-price\\\">Quantity: {{item.quantity}}</div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </cdk-virtual-scroll-viewport>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn--green\\\" (click)=\\\"checkout()\\\">Checkout</button>\\r\\n      </div>\\r\\n  </div>\\r\\n</main>\\r\\n\\r\\n\"","module.exports = \"<div  *ngFor=\\\"let alert of alerts$ | async as alerts\\\">\\r\\n  <ngb-alert [type]=\\\"alert.type\\\" [dismissible]=\\\"dismissible\\\" (close)=\\\"onClosed(alert)\\\">{{ alert.msg }}</ngb-alert>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"  <div class=\\\"bulk-order__copy\\\">\\r\\n    <p>\\r\\n      Simply copy the item records from your CSV file and paste them into the\\r\\n      text box using the following format: SKU, Quantity. Each record should\\r\\n      start from a new line.\\r\\n    </p>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <textarea class=\\\"bulk-order__copy-field\\\"></textarea>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"bulk-order__copy-errors\\\">\\r\\n          <p>Error in line 1: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <p>Error in line 12: Product is not recognized</p>\\r\\n          <a class=\\\"all-errors\\\" href=\\\"#\\\">Show all Errors</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-3\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"btn btn--blue\\\">Validate</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<div class=\\\"bulk-order__add-order\\\">\\r\\n  <button\\r\\n    class=\\\"btn btn--green ml-auto\\\"\\r\\n    (click)=\\\"addItemsToCart()\\\"\\r\\n  >\\r\\n    Add to Order\\r\\n  </button>\\r\\n</div>\\r\\n\"","module.exports = \"<form class=\\\"row list__item\\\" [formGroup]=\\\"itemForm\\\">\\r\\n  <div class=\\\"col-md\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n              formControlName=\\\"sku\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n              formControlName=\\\"productName\\\"  [ngbTypeahead]=\\\"searchProductsSuggestionsByName\\\"\\r\\n              [resultFormatter]=\\\"suggestedProductsFormatter\\\"\\r\\n              (selectItem)=\\\"suggestedProductSelected($event)\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-auto\\\">\\r\\n              <div class=\\\"input-group input-group--qty\\\">\\r\\n                  <input type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control form-control--qty\\\"\\r\\n                  formControlName=\\\"qty\\\">\\r\\n                  <a class=\\\"btn btn--white\\\" (click)=\\\"onRemove()\\\">\\r\\n                      <span class=\\\"btn__ico btn__ico--trash-gray\\\"></span>\\r\\n                  </a>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</form>\\r\\n<div  *ngIf=\\\"sku.invalid && (sku.dirty || sku.touched)\\\"\\r\\n        class=\\\"row\\\">\\r\\n    <div class=\\\"col-md\\\" *ngIf=\\\"sku.errors.required\\\">\\r\\n      <div class=\\\"form-error\\\">\\r\\n        SKU is required.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md\\\" *ngIf=\\\"sku.errors.skuExists\\\">\\r\\n        <div class=\\\"form-error\\\" >\\r\\n         There is no such SKU.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md\\\" *ngIf=\\\"sku.errors.uniqueSku\\\">\\r\\n      <div class=\\\"form-error\\\">\\r\\n        SKU value must be unique.\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- <div  *ngIf=\\\"!!id && id.invalid && (sku.dirty || sku.touched)\\\"\\r\\n        class=\\\"row\\\">\\r\\n    <div class=\\\"col-md\\\">\\r\\n      <div class=\\\"form-error\\\" *ngIf=\\\"id.errors.required\\\">\\r\\n       There is not such SKU.\\r\\n      </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n<!-- <div class=\\\"row\\\">{{ qty.invalid}}</div>\\r\\n<div class=\\\"row\\\">{{ qty.dirty}}</div>\\r\\n<div class=\\\"row\\\">{{ qty.touched}}</div> -->\\r\\n<div  *ngIf=\\\"qty.invalid && (qty.dirty || qty.touched)\\\"\\r\\n        class=\\\"row\\\">\\r\\n    <div class=\\\"col-md\\\" *ngIf=\\\"qty.errors.required\\\">\\r\\n      <div class=\\\"form-error\\\" >\\r\\n        Quantity is required.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md\\\" *ngIf=\\\"qty.errors.min\\\">\\r\\n      <div class=\\\"form-error\\\" >\\r\\n        Quantity is less than minimum.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md\\\" *ngIf=\\\"qty.errors.max\\\">\\r\\n      <div class=\\\"form-error\\\">\\r\\n        Quantity is more than maximum.\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\\r\\n\\r\\n    <!-- Bulk order tab content -->\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n          <div class=\\\"col-auto mr-auto\\\">\\r\\n            <h2>Add new item</h2>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <a class=\\\"order__t-link mr-3\\\" *ngIf=\\\"!itemsIsEmpty\\\" (click)=\\\"clearItems()\\\">Remove all</a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <form class=\\\"bulk-order__new\\\" [formGroup]=\\\"newItemForm\\\" novalidate>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <input placeholder=\\\"Product SKU\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"sku\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <input placeholder=\\\"Product name\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"productName\\\" [ngbTypeahead]=\\\"searchProductsSuggestionsByName\\\"\\r\\n                            [resultFormatter]=\\\"suggestedProductsFormatter\\\"\\r\\n                            (selectItem)=\\\"suggestedProductSelected($event)\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-auto\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-auto\\\">\\r\\n                            <div class=\\\"input-group input-group--qty\\\">\\r\\n                                <input placeholder=\\\"QTY\\\" type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control form-control--qty\\\"\\r\\n                                formControlName=\\\"qty\\\">\\r\\n                                <button [disabled]=\\\"newItemForm.invalid\\\" class=\\\"btn btn--blue\\\" (click)=\\\"addItem()\\\">\\r\\n                                    <span class=\\\"btn__ico btn__ico--plus-white\\\"></span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        <form class=\\\"bulk-order__list\\\" [formGroup]=\\\"itemsForm\\\">\\r\\n            <h2>Items in order</h2>\\r\\n            <div class=\\\"list\\\"\\r\\n             formArrayName=\\\"items\\\">\\r\\n                <app-bulk-order-item [itemForm]=\\\"itemForm\\\" [index]=\\\"i\\\" (removeClicked)=\\\"removeItem($event)\\\"\\r\\n                 *ngFor=\\\"let itemForm of itemsForm.controls['items'].controls; let i = index\\\"></app-bulk-order-item>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"row\\\" *ngIf=\\\"itemsForm.controls['items'].errors?.itemsEmpty\\\">\\r\\n                <div class=\\\"col-md\\\">\\r\\n                  <div class=\\\"form-error\\\" >\\r\\n                    Orders items list is empty.\\r\\n                  </div>\\r\\n                </div>\\r\\n            </div> -->\\r\\n        </form>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"bulk-order__add-order\\\">\\r\\n        <button class=\\\"btn btn--green ml-auto\\\" [disabled]=\\\"itemsForm.invalid\\\" (click)=\\\"addItemsToCart()\\\">Add to Order</button>\\r\\n    </div>\\r\\n\\r\\n\"","module.exports = \"<main class=\\\"main container\\\">\\r\\n  <div class=\\\"content\\\">\\r\\n      <!-- <app-bulk-order-manual></app-bulk-order-manual> -->\\r\\n\\r\\n      <div class=\\\"bulk-order\\\">\\r\\n        <h1>Bulk Order Pad</h1>\\r\\n        <div class=\\\"row bulk-order__actions\\\">\\r\\n            <div class=\\\"bulk-order__actions-item col-md-auto\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"btn btn--blue btn--outline\\\">Catalog order</a>\\r\\n            </div>\\r\\n            <div class=\\\"bulk-order__actions-item col-md\\\">\\r\\n                <div class=\\\"btn-group\\\">\\r\\n                    <a class=\\\"btn btn--outline\\\" [ngClass]=\\\"{'btn--active': selectedTab == 'manualy'}\\\" (click)=\\\"setSelectedTab('manualy')\\\">Manual</a>\\r\\n                    <a class=\\\"btn btn--outline\\\" [ngClass]=\\\"{'btn--active': selectedTab == 'csv'}\\\" (click)=\\\"setSelectedTab('csv')\\\">Copy & Paste</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Bulk order tab content -->\\r\\n        <div class=\\\"bulk-order__content\\\" [ngClass]=\\\"{'bulk-order__content--active': selectedTab == 'manualy'}\\\" >\\r\\n          <app-bulk-order-manual></app-bulk-order-manual>\\r\\n        </div>\\r\\n        <div class=\\\"bulk-order__content \\\" [ngClass]=\\\"{'bulk-order__content--active': selectedTab == 'csv'}\\\">\\r\\n          <app-bulk-order-csv></app-bulk-order-csv>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n      <app-mobile-cart-summary></app-mobile-cart-summary>\\r\\n      <!-- <div class=\\\"d-block d-lg-none mt-auto\\\">\\r\\n          <div class=\\\"mobile-order\\\" data-name=\\\"mobile-order\\\">\\r\\n              <div class=\\\"mobile-order__ico\\\"></div>\\r\\n              <div class=\\\"mobile-order__info\\\">\\r\\n                  <div class=\\\"mobile-order__t\\\">Your Order</div>\\r\\n                  <div class=\\\"mobile-order__descr\\\">You have 1 items in your order</div>\\r\\n              </div>\\r\\n              <div class=\\\"mobile-order__price ml-auto\\\">$1,500.00</div>\\r\\n          </div>\\r\\n      </div> -->\\r\\n  </div>\\r\\n  <div class=\\\"sidebar sidebar--bg-gray d-none d-lg-block\\\">\\r\\n      <div class=\\\"sidebar__inner\\\">\\r\\n          <app-active-order></app-active-order>\\r\\n      </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"<app-active-order-mobile #mobileOrderSidebar></app-active-order-mobile>\\r\\n<main class=\\\"main container\\\">\\r\\n  <app-categories\\r\\n    [categories]=\\\"categories$\\\"\\r\\n    (categoryChanged)=\\\"categoryChanged($event)\\\"\\r\\n    #mobileCategoies\\r\\n  ></app-categories>\\r\\n  <div class=\\\"content\\\">\\r\\n    <form class=\\\"search d-none d-xl-block\\\">\\r\\n      <app-search-products\\r\\n        (searchTextChanged)=\\\"searchByText($event)\\\"\\r\\n      ></app-search-products>\\r\\n    </form>\\r\\n    <div class=\\\"mobile-navbar d-block d-xl-none\\\">\\r\\n      <form class=\\\"search\\\">\\r\\n          <app-search-products\\r\\n          (searchTextChanged)=\\\"searchByText($event)\\\"\\r\\n        ></app-search-products>\\r\\n        <a class=\\\"search__close\\\" (click)=\\\"closeMobileSearch()\\\"></a>\\r\\n      </form>\\r\\n      <div class=\\\"list\\\">\\r\\n        <a class=\\\"list__item\\\" (click)=\\\"openMobileCategories(mobileCategoies)\\\">\\r\\n          <svg\\r\\n            class=\\\"list__ico\\\"\\r\\n            width=\\\"20px\\\"\\r\\n            height=\\\"20px\\\"\\r\\n            viewBox=\\\"0 0 20 20\\\"\\r\\n            version=\\\"1.1\\\"\\r\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n          >\\r\\n            <g\\r\\n              id=\\\"Version-2\\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              stroke-width=\\\"1\\\"\\r\\n              fill=\\\"none\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            >\\r\\n              <g\\r\\n                id=\\\"Catalog-(mobile)-CATEGORY\\\"\\r\\n                transform=\\\"translate(-47.000000, -71.000000)\\\"\\r\\n                class=\\\"fill\\\"\\r\\n              >\\r\\n                <g id=\\\"Group-3\\\" transform=\\\"translate(47.000000, 71.000000)\\\">\\r\\n                  <g id=\\\"Group-5\\\">\\r\\n                    <path\\r\\n                      d=\\\"M2,7 L2,2 L7,2 L7.001,7 L2,7 Z M7,0 L2,0 C0.897,0 0,0.897 0,2 L0,7 C0,8.103 0.897,9 2,9 L7,9 C8.103,9 9,8.103 9,7 L9,2 C9,0.897 8.103,0 7,0 L7,0 Z\\\"\\r\\n                      id=\\\"Fill-1\\\"\\r\\n                    ></path>\\r\\n                    <path\\r\\n                      d=\\\"M13,7 L13,2 L18,2 L18.001,7 L13,7 Z M18,0 L13,0 C11.897,0 11,0.897 11,2 L11,7 C11,8.103 11.897,9 13,9 L18,9 C19.103,9 20,8.103 20,7 L20,2 C20,0.897 19.103,0 18,0 L18,0 Z\\\"\\r\\n                      id=\\\"Fill-3\\\"\\r\\n                    ></path>\\r\\n                    <path\\r\\n                      d=\\\"M2,18 L2,13 L7,13 L7.001,18 L2,18 Z M7,11 L2,11 C0.897,11 0,11.897 0,13 L0,18 C0,19.103 0.897,20 2,20 L7,20 C8.103,20 9,19.103 9,18 L9,13 C9,11.897 8.103,11 7,11 L7,11 Z\\\"\\r\\n                      id=\\\"Fill-5\\\"\\r\\n                    ></path>\\r\\n                    <path\\r\\n                      d=\\\"M13,18 L13,13 L18,13 L18.002,18 L13,18 Z M18,11 L13,11 C11.897,11 11,11.897 11,13 L11,18 C11,19.103 11.897,20 13,20 L18,20 C19.103,20 20,19.103 20,18 L20,13 C20,11.897 19.103,11 18,11 L18,11 Z\\\"\\r\\n                      id=\\\"Fill-7\\\"\\r\\n                    ></path>\\r\\n                  </g>\\r\\n                </g>\\r\\n              </g>\\r\\n            </g>\\r\\n          </svg>\\r\\n          Category\\r\\n        </a>\\r\\n        <a class=\\\"list__item\\\" (click)=\\\"openMobileSearch()\\\">\\r\\n          <svg\\r\\n            class=\\\"list__ico\\\"\\r\\n            width=\\\"20px\\\"\\r\\n            height=\\\"20px\\\"\\r\\n            viewBox=\\\"0 0 20 20\\\"\\r\\n            version=\\\"1.1\\\"\\r\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n          >\\r\\n            <g\\r\\n              id=\\\"Version-2\\\"\\r\\n              stroke=\\\"none\\\"\\r\\n              stroke-width=\\\"1\\\"\\r\\n              fill=\\\"none\\\"\\r\\n              fill-rule=\\\"evenodd\\\"\\r\\n            >\\r\\n              <g\\r\\n                id=\\\"Catalog-(mobile)-CATEGORY\\\"\\r\\n                transform=\\\"translate(-243.000000, -71.000000)\\\"\\r\\n                class=\\\"fill\\\"\\r\\n              >\\r\\n                <g id=\\\"Group-2\\\" transform=\\\"translate(243.000000, 71.000000)\\\">\\r\\n                  <path\\r\\n                    d=\\\"M2,7.5 C2,4.467 4.467,2 7.5,2 C10.533,2 13,4.467 13,7.5 C13,10.533 10.533,13 7.5,13 C4.467,13 2,10.533 2,7.5 M19.707,18.293 L13.455,12.041 C14.42,10.779 15,9.208 15,7.5 C15,3.364 11.636,0 7.5,0 C3.364,0 2.48689958e-14,3.364 2.48689958e-14,7.5 C2.48689958e-14,11.636 3.364,15 7.5,15 C9.208,15 10.779,14.42 12.041,13.455 L18.293,19.707 C18.488,19.902 18.744,20 19,20 C19.256,20 19.512,19.902 19.707,19.707 C20.098,19.316 20.098,18.684 19.707,18.293\\\"\\r\\n                    id=\\\"Fill-1\\\"\\r\\n                  ></path>\\r\\n                </g>\\r\\n              </g>\\r\\n            </g>\\r\\n          </svg>\\r\\n          Search\\r\\n        </a>\\r\\n        <div class=\\\"list__item d-none d-lg-block\\\">\\r\\n          <a\\r\\n            [routerLink]=\\\"['/bulkorder']\\\"\\r\\n            class=\\\"btn btn--blue btn--sm btn--block\\\"\\r\\n            >Bulk Order</a\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"list product--list\\\" *ngIf=\\\"(cart$ | async) as cart\\\">\\r\\n      <div class=\\\"list__item\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <div class=\\\"list__img list__img--placeholder\\\">\\r\\n          <img\\r\\n            src=\\\"{{ p.primaryImage?.url }}\\\"\\r\\n            alt=\\\"{{ p.sku }}\\\"\\r\\n            class=\\\"list__pic\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <div class=\\\"list__info\\\">\\r\\n          <a class=\\\"list__name\\\" [routerLink]=\\\"['/product-details', p.id]\\\">{{ p.name }}</a>\\r\\n          <div class=\\\"list__brand\\\">{{p.brand}}</div>\\r\\n          <div class=\\\"list__model\\\">\\r\\n            Model: {{p.model}} <span class=\\\"divider\\\">|</span>SKU: {{ p.sku }}\\r\\n          </div>\\r\\n          <div class=\\\"list__descr\\\" [innerHTML]=\\\"p.quickReview\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"list__other\\\">\\r\\n          <div class=\\\"list__price\\\">{{ p.price }}</div>\\r\\n            <app-change-product-quantity [cart]=\\\"cart\\\" [productId]=\\\"p.id\\\"></app-change-product-quantity>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"page-nav\\\">\\r\\n      <div class=\\\"row align-items-end justify-content-center\\\">\\r\\n        <div class=\\\"col-auto\\\">\\r\\n          <div class=\\\"page-nav__total\\\">\\r\\n            You've viewed {{ products?.length }} of\\r\\n            {{ paginationInfo.collectionSize }} products\\r\\n          </div>\\r\\n          <ngb-pagination\\r\\n            [(page)]=\\\"paginationInfo.page\\\"\\r\\n            [pageSize]=\\\"paginationInfo.pageSize\\\"\\r\\n            [collectionSize]=\\\"paginationInfo.collectionSize\\\"\\r\\n            (pageChange)=\\\"pageChanged()\\\"\\r\\n          ></ngb-pagination>\\r\\n        </div>\\r\\n        <div class=\\\"col-auto ml-sm-auto\\\">\\r\\n          Show\\r\\n          <app-page-size-selector\\r\\n            [defaultPageSize]=\\\"paginationInfo.pageSize\\\"\\r\\n            [pageSizes]=\\\"pageSizes\\\"\\r\\n            (pageSizeChanged)=\\\"pageSizeChanged($event)\\\"\\r\\n          ></app-page-size-selector>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <app-mobile-cart-summary [activeOrderMobileSidebar]=\\\"mobileOrderSidebar\\\"></app-mobile-cart-summary>\\r\\n  </div>\\r\\n\\r\\n  <!-- avtive order -->\\r\\n  <div class=\\\"sidebar sidebar--bg-gray d-none d-lg-block\\\">\\r\\n    <div class=\\\"sidebar__inner\\\">\\r\\n      <app-active-order></app-active-order>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"<!-- Swipe category-->\\r\\n<div class=\\\"swipe swipe--category\\\" [ngClass]=\\\"{'swipe--opened': isOpen}\\\">\\r\\n  <div class=\\\"swipe__header\\\">\\r\\n      <div class=\\\"swipe__header-t\\\">Category</div>\\r\\n      <div class=\\\"swipe__close\\\" (click)=\\\"closeSidebar()\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"swipe__body\\\">\\r\\n      <ul class=\\\"nav nav--category\\\">\\r\\n        <li class=\\\"nav__item\\\">\\r\\n          <a class=\\\"nav__link\\\" [ngClass]=\\\"{'nav__link--active': selectedCategory === null}\\\" (click)=\\\"selectAllProducts()\\\" >All Products</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav__item\\\" *ngFor=\\\"let category of categories | async\\\" >\\r\\n          <a class=\\\"nav__link\\\" [ngClass]=\\\"{'nav__link--active': isActive(category)}\\\" (click)=\\\"selectCategory(category)\\\" >{{category.name}}</a>\\r\\n      </li>\\r\\n      </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"sidebar d-none d-xl-block\\\">\\r\\n  <div class=\\\"sidebar__block\\\">\\r\\n      <a [routerLink]=\\\"['/bulkorder']\\\"\\r\\n       class=\\\"btn btn--blue btn--block\\\">Bulk Order</a>\\r\\n  </div>\\r\\n  <ul class=\\\"nav nav--category\\\">\\r\\n      <li class=\\\"nav__item\\\">\\r\\n          <a class=\\\"nav__link\\\" [ngClass]=\\\"{'nav__link--active': selectedCategory === null}\\\" (click)=\\\"selectAllProducts()\\\" >All Products</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav__item\\\" *ngFor=\\\"let category of categories | async\\\" >\\r\\n          <a class=\\\"nav__link\\\" [ngClass]=\\\"{'nav__link--active': isActive(category)}\\\" (click)=\\\"selectCategory(category)\\\" >{{category.name}}</a>\\r\\n      </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"input-group input-group--qty mt-auto\\\" appRemoveWrapper>\\r\\n  <a *ngIf=\\\"!productLineItem; else quantityChanger\\\" class=\\\"btn btn--blue\\\" (click)=\\\"addProductToCart()\\\">\\r\\n    <span class=\\\"btn__ico btn__ico--plus-white\\\"></span>\\r\\n  </a>\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #quantityChanger>\\r\\n<a class=\\\"btn btn--green\\\" (click)=\\\"decrementQuantity(productLineItem)\\\">\\r\\n  <span class=\\\"btn__ico btn__ico--minus-white\\\"></span>\\r\\n</a>\\r\\n<input type=\\\"text\\\" [OnlyNumber]=\\\"true\\\" class=\\\"input-group__input\\\" [value]=\\\"productLineItem.quantity\\\" (keyup)=\\\"onChangeQuantity($event.target.value)\\\">\\r\\n<a class=\\\"btn btn--green\\\" (click)=\\\"incrementQuantity(productLineItem)\\\">\\r\\n  <span class=\\\"btn__ico btn__ico--plus-white\\\"></span>\\r\\n</a>\\r\\n<!-- [(ngModel)]=\\\"productLineItem.quantity\\\" (ngModelChange)=\\\"updateLineItemQuantity()\\\" -->\\r\\n</ng-template>\\r\\n\"","module.exports = \"<div class=\\\"d-block d-lg-none mt-auto\\\" (click)=\\\"openSidebar()\\\" *ngIf=\\\"(cart$ | async) as cart\\\">\\r\\n  <div class=\\\"mobile-order\\\" data-name=\\\"mobile-order\\\">\\r\\n    <div class=\\\"mobile-order__ico\\\"></div>\\r\\n    <div class=\\\"mobile-order__info\\\">\\r\\n      <div class=\\\"mobile-order__t\\\">Your Order</div>\\r\\n      <div class=\\\"mobile-order__descr\\\">You have {{cart.itemsCount}} items in your order</div>\\r\\n    </div>\\r\\n    <div class=\\\"mobile-order__price ml-auto\\\">{{cart.subTotal.formattedAmount}}</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n  <input appRemoveWrapper\\r\\n    placeholder=\\\"Search (e.g. «DORT»)\\\"\\r\\n    type=\\\"text\\\"\\r\\n    class=\\\"form-control\\\"\\r\\n    (keyup)=\\\"search($event.target.value)\\\"\\r\\n  />\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"tabs__content\\\" appRemoveWrapper >\\r\\n  <fieldset *ngIf=\\\"organizationDetails\\\">\\r\\n    <legend>Legal information</legend>\\r\\n    <div class=\\\"form-row form-group\\\">\\r\\n      <div class=\\\"col-md\\\">\\r\\n        <label for=\\\"name\\\">Company Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"organizationDetails.name\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"col-md\\\">\\r\\n        <label for=\\\"number\\\">Tax Number</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"number\\\" [(ngModel)]=\\\"organizationDetails.taxNumber\\\"/>\\r\\n      </div>\\r\\n      <div class=\\\"col-md\\\">\\r\\n        <label for=\\\"reg-number\\\">Company Registration Number</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"reg-number\\\" [(ngModel)]=\\\"organizationDetails.companyRegistrationNumber\\\"/>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <fieldset *ngIf=\\\"organizationDetails\\\">\\r\\n    <legend>Procurements service contact</legend>\\r\\n    <div class=\\\"form-row form-group\\\">\\r\\n      <div class=\\\"col-md\\\">\\r\\n        <label for=\\\"phone\\\">Phone</label>\\r\\n        <input\\r\\n          placeholder=\\\"Enter phone\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"phone\\\"\\r\\n          [(ngModel)]=\\\"organizationDetails.phoneNumber\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"col-md\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input\\r\\n          placeholder=\\\"Enter email\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"email\\\"\\r\\n          [(ngModel)]=\\\"organizationDetails.email\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"col-md\\\">\\r\\n        <label for=\\\"person\\\">Contact Person</label>\\r\\n        <input\\r\\n          placeholder=\\\"Enter name\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          id=\\\"person\\\"\\r\\n          [(ngModel)]=\\\"organizationDetails.contactPerson\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <fieldset *ngIf=\\\"organizationDetails\\\">\\r\\n    <legend>Billing address</legend>\\r\\n    <div class=\\\"form-row form-group\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"billing-country\\\">Country</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter country\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"billing-country\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.billingAddress.countryName\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"billing-city\\\">City</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter city\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"billing-city\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.billingAddress.city\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-auto\\\">\\r\\n            <label for=\\\"billing-code\\\">Postal Code</label>\\r\\n            <input\\r\\n              placeholder=\\\"Code...\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control form-control--code\\\"\\r\\n              id=\\\"billing-code\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.billingAddress.postalCode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"billing-address\\\">Address 1</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter name\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"billing-address\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.billingAddress.line1\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"billing-address-2\\\">Address 2</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter name\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"billing-address-2\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.billingAddress.line2\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <fieldset *ngIf=\\\"organizationDetails\\\">\\r\\n    <legend>Shipping address</legend>\\r\\n    <div class=\\\"form-row form-group\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"shipping-country\\\">Country</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter country\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"shipping-country\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.shippingAddress.countryName\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"shipping-city\\\">City</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter city\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"shipping-city\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.shippingAddress.city\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-auto\\\">\\r\\n            <label for=\\\"shipping-code\\\">Postal Code</label>\\r\\n            <input\\r\\n              placeholder=\\\"Code...\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control form-control--code\\\"\\r\\n              id=\\\"shipping-code\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.shippingAddress.postalCode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-row\\\">\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"shipping-address\\\">Address 1</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter name\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"shipping-address\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.shippingAddress.line1\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-md\\\">\\r\\n            <label for=\\\"shipping-address-2\\\">Address 2</label>\\r\\n            <input\\r\\n              placeholder=\\\"Enter name\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"shipping-address-2\\\"\\r\\n              [(ngModel)]=\\\"organizationDetails.shippingAddress.line2\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <fieldset *ngIf=\\\"organizationDetails\\\">\\r\\n    <legend>Return Invalid orders to creator</legend>\\r\\n    <!-- {{organizationDetails.returnInvalidOrdersToCreator}} -->\\r\\n    <div class=\\\"btn-group btn-group--uppercase\\\">\\r\\n      <a class=\\\"btn btn--outline\\\" [ngClass]=\\\"{'btn--active': organizationDetails.returnInvalidOrdersToCreator}\\\" (click)=\\\"setOrdersProperty(true)\\\">Yes</a>\\r\\n      <a class=\\\"btn btn--outline\\\" [ngClass]=\\\"{'btn--active': !organizationDetails.returnInvalidOrdersToCreator}\\\" (click)=\\\"setOrdersProperty(false)\\\">No</a>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n  <a class=\\\"btn btn--green\\\" (click)=\\\"updateCompany()\\\">Update Company</a>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"tabs__content\\\" appRemoveWrapper>\\r\\n  <a (click)=\\\"openCreateUserModal()\\\" class=\\\"btn btn--green mb-4\\\">Add new User</a>\\r\\n  <div class=\\\"table-responsive\\\" *ngIf=\\\"users\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <colgroup>\\r\\n        <col class=\\\"col-w-120\\\" />\\r\\n        <col class=\\\"col-w-120\\\" />\\r\\n        <col class=\\\"col-w-120\\\" />\\r\\n        <col class=\\\"col-w-120\\\" />\\r\\n        <col class=\\\"col-w-120\\\" />\\r\\n        <col class=\\\"col-w-140\\\" />\\r\\n        <col class=\\\"col-w-140\\\" />\\r\\n        <col class=\\\"col-w-120\\\" />\\r\\n      </colgroup>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Account</th>\\r\\n          <th>First name</th>\\r\\n          <th>Last name</th>\\r\\n          <th>Workflow Role</th>\\r\\n          <th>System Role</th>\\r\\n          <th>Email</th>\\r\\n          <th>Phone</th>\\r\\n          <th>Action</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody *ngFor=\\\"let user of users\\\" >\\r\\n        <tr>\\r\\n          <td>{{user.userName}}</td>\\r\\n          <td>{{user.firstName}}</td>\\r\\n          <td>{{user.lastName}}</td>\\r\\n          <td>Тут workflow role</td>\\r\\n          <td>{{user.role.name}}</td>\\r\\n          <td>{{user.email}}</td>\\r\\n          <td>{{user.phoneNumber}}</td>\\r\\n          <td>\\r\\n            <a (click)=\\\"deleteUser(user)\\\" class=\\\"text--red\\\">Remove user</a>\\r\\n            |\\r\\n            <a (click)=\\\"openEditUserModal(user)\\\" class=\\\"text--red\\\">Edit user</a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"page-nav\\\">\\r\\n      <div class=\\\"row align-items-end justify-content-center\\\">\\r\\n        <div class=\\\"col-auto\\\">\\r\\n          <div class=\\\"page-nav__total\\\">You've viewed {{users?.length}} of {{paginationInfo.collectionSize}} orders</div>\\r\\n          <ngb-pagination\\r\\n          [(page)]=\\\"paginationInfo.page\\\"\\r\\n          [pageSize]=\\\"paginationInfo.pageSize\\\"\\r\\n          [collectionSize]=\\\"paginationInfo.collectionSize\\\"\\r\\n          (pageChange)=\\\"pageChanged()\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <div class=\\\"col-auto ml-sm-auto\\\">\\r\\n            Show\\r\\n            <app-page-size-selector [defaultPageSize]=\\\"paginationInfo.pageSize\\\" [pageSizes]=\\\"pageSizes\\\" (pageSizeChanged)=\\\"pageSizeChanged($event)\\\" ></app-page-size-selector>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<main class=\\\"main container\\\">\\r\\n  <div class=\\\"account\\\">\\r\\n    <h1>Company</h1>\\r\\n\\r\\n    <!-- Tabs work not js only css -->\\r\\n    <div class=\\\"tabs\\\">\\r\\n      <input class=\\\"tabs__input\\\" type=\\\"radio\\\" name=\\\"tabs\\\" id=\\\"tab-1\\\" checked />\\r\\n      <label for=\\\"tab-1\\\" class=\\\"tabs__item\\\">\\r\\n        Company Details\\r\\n        <span class=\\\"mobile-name\\\">Details</span>\\r\\n      </label>\\r\\n\\r\\n      <input class=\\\"tabs__input\\\" type=\\\"radio\\\" name=\\\"tabs\\\" id=\\\"tab-2\\\" />\\r\\n      <label for=\\\"tab-2\\\" class=\\\"tabs__item\\\">\\r\\n        User Management\\r\\n        <span class=\\\"mobile-name\\\">Users</span>\\r\\n      </label>\\r\\n\\r\\n      <input class=\\\"tabs__input\\\" type=\\\"radio\\\" name=\\\"tabs\\\" id=\\\"tab-3\\\" />\\r\\n      <label for=\\\"tab-3\\\" class=\\\"tabs__item\\\">\\r\\n        Role Management\\r\\n        <span class=\\\"mobile-name\\\">Roles</span>\\r\\n      </label>\\r\\n\\r\\n      <app-company-details [organization]=\\\"organization\\\" [organizationDetails]=\\\"organizationDetails\\\"></app-company-details>\\r\\n\\r\\n      <app-company-users [organization]=\\\"organization\\\"></app-company-users>\\r\\n\\r\\n      <app-role-management></app-role-management>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"<form #myform='ngForm' (ngSubmit)='passBack(myform)' class='p-3'>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-title\\\" *ngIf=\\\"!editUserMode\\\">Add new user</h4>\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-title\\\" *ngIf=\\\"editUserMode\\\">Edit user</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-describedby=\\\"modal-title\\\" (click)=\\\"closeModal()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n  </div>\\r\\n  <div class=\\\"form-group mt-3\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input id=\\\"useremail\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': email.invalid && (email.dirty || email.touched) }\\\" email>\\r\\n    <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"email.errors.required\\\">Email is required.</div>\\r\\n      <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"firstName\\\">First Name</label>\\r\\n    <input id=\\\"firstName\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" class=\\\"form-control\\\" pattern=\\\"[A-Za-z ]+\\\" [ngClass]=\\\"{ 'is-invalid': firstName.invalid && (firstName.dirty || firstName.touched) }\\\" required [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\">\\r\\n    <div *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"firstName.errors.required\\\">First Name is required.</div>\\r\\n      <div *ngIf=\\\"firstName.errors.pattern\\\">First Name is not valid</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"lastName\\\">Last Name</label>\\r\\n    <input id=\\\"lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" class=\\\"form-control\\\" pattern=\\\"[A-Za-z -]+\\\" [ngClass]=\\\"{ 'is-invalid': lastName.invalid && (lastName.dirty || lastName.touched) }\\\" required [(ngModel)]=\\\"user.lastName\\\" #lastName=\\\"ngModel\\\">\\r\\n    <div *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required.</div>\\r\\n      <div *ngIf=\\\"lastName.errors.pattern\\\">Last Name is not valid</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\" *ngIf=\\\"!editUserMode\\\">\\r\\n    <label for=\\\"userName\\\">User Name</label>\\r\\n    <input id=\\\"userName\\\" name=\\\"userName\\\" placeholder=\\\"User Name\\\" type=\\\"text\\\" class=\\\"form-control\\\" required [ngClass]=\\\"{ 'is-invalid': userName.invalid && (userName.dirty || userName.touched) }\\\" required [(ngModel)]=\\\"user.userName\\\" #userName=\\\"ngModel\\\">\\r\\n    <div *ngIf=\\\"userName.invalid && (userName.dirty || userName.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"userName.errors.required\\\">User Name is required.</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"selectRole\\\">Role</label>\\r\\n    <select id=\\\"selectRole\\\" name=\\\"selectRole\\\" class=\\\"custom-select\\\" required aria-describedby=\\\"selectRoleHelpBlock\\\"  [ngClass]=\\\"{ 'is-invalid': role.invalid && (role.dirty || role.touched) }\\\" required [(ngModel)]=\\\"user.role\\\" #role=\\\"ngModel\\\">\\r\\n      <option value=\\\"\\\" style=\\\"display:none\\\">Please select role</option>\\r\\n      <option value=\\\"pp-admin\\\">Administrator</option>\\r\\n      <option value=\\\"pp-agent\\\">Agent</option>\\r\\n    </select>\\r\\n    <div *ngIf=\\\"role.invalid && (role.dirty || role.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"role.errors.required\\\">Role is required.</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\" *ngIf=\\\"!editUserMode\\\">\\r\\n    <label for=\\\"Password\\\">Password</label>\\r\\n    <input id=\\\"password\\\" name=\\\"password\\\" (change)=\\\"checkValid(myform)\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" pattern=\\\"(^[A-Z])\\\\w+\\\\S+\\\" [ngClass]=\\\"{ 'is-invalid': password.invalid && (password.dirty || password.touched) }\\\" required minlength=\\\"6\\\">\\r\\n    <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\r\\n      <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n      <div *ngIf=\\\"password.errors.pattern\\\">Password must start with uppercase letter</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\" *ngIf=\\\"!editUserMode\\\">\\r\\n    <label for=\\\"confirmPassword\\\">Confirm Password</label>\\r\\n    <input id=\\\"confirmPassword\\\" appConfirmEqualValidator=\\\"password\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\" class=\\\"form-control\\\" ngModel #confirmPassword=\\\"ngModel\\\" pattern=\\\"(^[A-Z])\\\\w+\\\" [ngClass]=\\\"{ 'is-invalid': confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) }\\\" required minlength=\\\"6\\\">\\r\\n    <div *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\\\"\\r\\nclass=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"confirmPassword.errors.required\\\">Password is required</div>\\r\\n      <div *ngIf=\\\"confirmPassword.errors.notEqual\\\">Password and Confirm Password does not match</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mb-4\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\r\\n    <button name=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn--green mb-4\\\" *ngIf=\\\"!editUserMode\\\" [disabled]=\\\"myform.invalid\\\">Add</button>\\r\\n    <button name=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn--green mb-4\\\" *ngIf=\\\"editUserMode\\\" [disabled]=\\\"myform.invalid\\\">Update user</button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"tabs__content\\\" appRemoveWrapper>\\r\\n  <a href=\\\"#\\\" class=\\\"btn btn--green mb-4\\\">Add new Role</a>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <colgroup>\\r\\n        <col class=\\\"col-w-340\\\" />\\r\\n        <col class=\\\"col-w-140\\\" />\\r\\n        <col class=\\\"col-w-140\\\" />\\r\\n        <col class=\\\"col-w-260\\\" />\\r\\n      </colgroup>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Role Name</th>\\r\\n          <th>Role ID</th>\\r\\n          <th>Creation Date</th>\\r\\n          <th>Created By</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>Agent Provocateur</td>\\r\\n          <td>0329032</td>\\r\\n          <td>Tue, 05/03</td>\\r\\n          <td>Ivanov Peotr</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<footer class=\\\"footer\\\">\\r\\n<p>&copy; 2019 VirtoCommerce. All Rights Reserved.<br><a href=\\\"http://virtocommerce.com\\\" rel=\\\"nofollow\\\"\\r\\n              target=\\\"_blank\\\">.NET ecommerce framework</a> by Virto</p>\\r\\n</footer>\\r\\n\"","module.exports = \"<!-- <app-header-menu [components]=\\\"menuComponents$ | async\\\" (select)=\\\"onSelect($event)\\\">\\r\\n</app-header-menu> -->\\r\\n<!-- <app-header-menu-list [components]=\\\"menuComponents\\\" [menuSelectedComponent]=\\\"selected$ | async\\\" (select)=\\\"select.emit($event)\\\">\\r\\n</app-header-menu-list> -->\\r\\n<app-menu></app-menu>\"","module.exports = \"<app-alerts></app-alerts>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"<h2>Order details for approval</h2>\\r\\n\\r\\n\"","module.exports = \"<main class=\\\"main container\\\">\\r\\n  <div class=\\\"order\\\">\\r\\n    <h1>Awaiting Approval</h1>\\r\\n    <div class=\\\"row page__sort\\\">\\r\\n      <div class=\\\"col-md-auto page__sort-date\\\">\\r\\n        From\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\r\\n             name=\\\"dp1\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"startDate\\\" (ngModelChange)=\\\"getAllOrders()\\\" (click)=\\\"d1.toggle()\\\">\\r\\n        To\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\r\\n             name=\\\"dp2\\\" ngbDatepicker #d2=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"endDate\\\" (ngModelChange)=\\\"getAllOrders()\\\" (click)=\\\"d2.toggle()\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <colgroup>\\r\\n          <col class=\\\"col-w-160\\\" />\\r\\n          <col class=\\\"col-w-140\\\" />\\r\\n          <col class=\\\"col-w-100\\\" />\\r\\n          <col class=\\\"col-w-80\\\" />\\r\\n          <col class=\\\"col-w-140\\\" />\\r\\n          <col class=\\\"col-w-130\\\" />\\r\\n          <col class=\\\"col-w-130\\\" />\\r\\n        </colgroup>\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Order ID</th>\\r\\n            <th>Status</th>\\r\\n            <th>Date</th>\\r\\n            <th>#Items</th>\\r\\n            <th>Created by</th>\\r\\n            <th>Assignet to</th>\\r\\n            <th>Total</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let order of orders\\\">\\r\\n          <tr>\\r\\n            <td>{{order.number}}</td>\\r\\n            <td>\\r\\n              <span class=\\\"text--blue\\\">{{order.status}}</span>\\r\\n            </td>\\r\\n            <td>{{order.createdDate | date: 'EEE, dd/MM '}}</td>\\r\\n            <td>{{order.items.length}}</td>\\r\\n            <td>{{order.createdBy}}</td>\\r\\n            <td>{{order.assignedTo}}</td>\\r\\n            <td>{{order.total.formattedAmount}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-nav\\\">\\r\\n      <div class=\\\"row align-items-end justify-content-center\\\">\\r\\n        <div class=\\\"col-auto\\\">\\r\\n          <div class=\\\"page-nav__total\\\">You've viewed {{orders.length}} of {{paginationInfo.collectionSize}} orders</div>\\r\\n          <ngb-pagination\\r\\n          [(page)]=\\\"paginationInfo.page\\\"\\r\\n          [pageSize]=\\\"paginationInfo.pageSize\\\"\\r\\n          [collectionSize]=\\\"paginationInfo.collectionSize\\\"\\r\\n          (pageChange)=\\\"pageChanged()\\\"></ngb-pagination>\\r\\n        </div>\\r\\n        <div class=\\\"col-auto ml-sm-auto\\\">\\r\\n            Show\\r\\n            <app-page-size-selector [defaultPageSize]=\\\"paginationInfo.pageSize\\\" [pageSizes]=\\\"pageSizes\\\" (pageSizeChanged)=\\\"pageSizeChanged($event)\\\" ></app-page-size-selector>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"\\r\\n\\r\\n <!-- Swipe -->\\r\\n<div class=\\\"swipe swipe--menu\\\" [ngClass]=\\\"{'swipe--opened': isOpen}\\\">\\r\\n  <div class=\\\"swipe__header\\\">\\r\\n      <div class=\\\"swipe__header-t\\\">Username</div>\\r\\n      <div class=\\\"swipe__close\\\" (click)=\\\"closeMobileMenu()\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"swipe__body\\\">\\r\\n      <ul class=\\\"nav\\\">\\r\\n          <li class=\\\"nav__item\\\">\\r\\n              <a [routerLink]=\\\"['/catalog']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\" (click)=\\\"closeMobileMenu()\\\">Catalog</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav__item\\\">\\r\\n              <a [routerLink]=\\\"['/orders']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\" (click)=\\\"closeMobileMenu()\\\">Orders</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav__item\\\">\\r\\n              <a [routerLink]=\\\"['/forapproval']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\" (click)=\\\"closeMobileMenu()\\\">Awaiting Approval</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav__item\\\">\\r\\n              <a [routerLink]=\\\"['/company']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\" (click)=\\\"closeMobileMenu()\\\">Company</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav__item\\\">\\r\\n            <a [routerLink]=\\\"['/account']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\" (click)=\\\"closeMobileMenu()\\\">My account</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav__item\\\">\\r\\n            <a href=\\\"/account/logout\\\" class=\\\"nav__link\\\">Logout</a>\\r\\n          </li>\\r\\n      </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n <!-- Header -->\\r\\n <header class=\\\"header\\\">\\r\\n  <div class=\\\"header-inner container\\\">\\r\\n      <div class=\\\"row align-items-center\\\">\\r\\n          <div class=\\\"col-auto\\\">\\r\\n              <div class=\\\"header-logo\\\">Dentalmed</div>\\r\\n          </div>\\r\\n          <div class=\\\"col d-none d-lg-block header-nav\\\">\\r\\n              <ul class=\\\"nav\\\">\\r\\n                  <li class=\\\"nav__item\\\">\\r\\n                      <a [routerLink]=\\\"['/catalog']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\">Catalog</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav__item\\\">\\r\\n                      <a [routerLink]=\\\"['/orders']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\">Orders</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav__item\\\">\\r\\n                      <a [routerLink]=\\\"['/forapproval']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\">Awaiting Approval</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav__item\\\">\\r\\n                      <a [routerLink]=\\\"['/company']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\">Company</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav__item\\\">\\r\\n                    <a [routerLink]=\\\"['/account']\\\" class=\\\"nav__link\\\" routerLinkActive=\\\"nav__link--active\\\">My account</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav__item ml-auto\\\">\\r\\n                      <a href=\\\"/account/logout\\\" class=\\\"nav__link\\\">Logout</a>\\r\\n                  </li>\\r\\n              </ul>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto d-block d-lg-none ml-auto\\\">\\r\\n              <div class=\\\"header-nav-mobile\\\">\\r\\n                  <a class=\\\"header__link\\\" [routerLink]=\\\"['/bulkorder']\\\">Bulk Order</a>\\r\\n                  <a class=\\\"header-toggle\\\" (click)=\\\"openMobileMenu()\\\"></a>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</header>\\r\\n<!-- End Header -->\\r\\n\"","module.exports = \"<main class=\\\"main container\\\" *ngIf=\\\"order\\\">\\r\\n  <div class=\\\"order\\\">\\r\\n      <h1>Your order successfully</h1>\\r\\n      <div class=\\\"order__status\\\">\\r\\n          <div class=\\\"logo-vc\\\"></div>\\r\\n          <div class=\\\"order__status-name\\\">\\r\\n              Status <span class=\\\"status text--green\\\">{{order.status}}</span>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"row order__general\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"order__general-date\\\">\\r\\n                  Order Date <span class=\\\"value\\\">{{order.createdDate | date: 'MM/dd/yyyy h:mm:ss a'}}</span>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"order__general-number\\\">\\r\\n                  Order Number <span class=\\\"value\\\">{{order.number}}</span>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <h2>Details</h2>\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table\\\">\\r\\n              <colgroup>\\r\\n                  <col>\\r\\n                  <col class=\\\"col-w-340\\\">\\r\\n                  <col class=\\\"col-w-120\\\">\\r\\n                  <col class=\\\"col-w-120\\\">\\r\\n                  <col class=\\\"col-w-120\\\">\\r\\n              </colgroup>\\r\\n              <thead>\\r\\n                  <tr>\\r\\n                      <th>#</th>\\r\\n                      <th>Item Description</th>\\r\\n                      <th>Unit Price</th>\\r\\n                      <th>Invoice QTY</th>\\r\\n                      <th>Line Price</th>\\r\\n                  </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let item of items; let i = index \\\">\\r\\n                  <tr>\\r\\n                      <td>{{i+1}}</td>\\r\\n                      <td>\\r\\n                          {{item.name}}\\r\\n                          <div class=\\\"text--gray\\\">SKU: {{item.sku}}</div>\\r\\n                      </td>\\r\\n                      <td>{{item.placedPrice.formattedAmount}}</td>\\r\\n                      <td>{{item.quantity}}</td>\\r\\n                      <td>{{item.extendedPrice.formattedAmount}}</td>\\r\\n                  </tr>\\r\\n              </tbody>\\r\\n          </table>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6 ml-md-auto\\\">\\r\\n              <div class=\\\"list list--total\\\">\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      <b class=\\\"text--black\\\">Shipping</b> <span class=\\\"list__count\\\">{{order.shippingTotal.formattedAmount}}</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      <b class=\\\"text--black\\\">Total Fees</b> <span class=\\\"list__count free\\\">0.00</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      <b class=\\\"text--black\\\">Order Subtotal</b> <span class=\\\"list__count\\\">{{order.subTotal.formattedAmount}}</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      <b class=\\\"text--black\\\">GST</b> <span class=\\\"list__count\\\">{{order.taxTotal.formattedAmount}}</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      <b class=\\\"text--black\\\">Total</b> <span class=\\\"list__count\\\">{{order.total.formattedAmount}}</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"list__item\\\">\\r\\n                      <b class=\\\"text--black\\\">Currency</b> <span class=\\\"list__count\\\">{{order.currency.code}}</span>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"order__actions\\\">\\r\\n          <a [routerLink]=\\\"['/catalog']\\\" class=\\\"btn btn--outline\\\">Back to Catalog</a>\\r\\n          <a (click)=\\\"getInvoicePdf(order.number)\\\" class=\\\"btn btn--green\\\">Download</a>\\r\\n      </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"<app-active-order-mobile #mobileOrderSidebar></app-active-order-mobile>\\r\\n<main class=\\\"main container\\\">\\r\\n    <div class=\\\"order\\\">\\r\\n        <h1>Order details information</h1>\\r\\n        <div class=\\\"accordion\\\">\\r\\n            <div class=\\\"accordion__item\\\">\\r\\n                <div class=\\\"accordion__header\\\" (click)=\\\"toggleAccordion($event)\\\">\\r\\n                    <div class=\\\"accordion__t\\\">Details</div>\\r\\n                    <svg class=\\\"accordion__ico\\\" width=\\\"13px\\\" height=\\\"8px\\\" viewBox=\\\"0 0 13 8\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                        <g id=\\\"Version-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n                            <g id=\\\"Catalog\\\" transform=\\\"translate(-1027.000000, -961.000000)\\\" class=\\\"fill\\\">\\r\\n                                <polygon id=\\\"Fill-1\\\" transform=\\\"translate(1033.414000, 964.914000) translate(-1033.414000, -964.914000) \\\" points=\\\"1038.414 961 1033.415 966 1028.414 961 1027 962.414 1033.415 968.828 1039.828 962.414\\\"></polygon>\\r\\n                            </g>\\r\\n                        </g>\\r\\n                    </svg>\\r\\n                </div>\\r\\n                <div class=\\\"accordion__content\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"list list--total\\\">\\r\\n                                <div class=\\\"list__item\\\">\\r\\n                                    Subtotal <span class=\\\"list__count\\\">{{subTotal}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"list__item\\\">\\r\\n                                    Shipping <span class=\\\"list__count\\\">{{shipping == '$0.00' ? 'Free' : shipping}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"list__item\\\">\\r\\n                                    Total <span class=\\\"list__count\\\">{{total}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"list list--total\\\">\\r\\n                                <div class=\\\"list__item\\\">\\r\\n                                    Created by <span class=\\\"list__count\\\">{{createdBy}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"list__item\\\">\\r\\n                                    Status <span class=\\\"list__count\\\">{{status}}</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"list__item\\\">\\r\\n                                    Assigned to <span class=\\\"list__count\\\">Dmitriy Petrov</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"accordion__item\\\">\\r\\n                <div class=\\\"accordion__header\\\" (click)=\\\"toggleAccordion($event)\\\">\\r\\n                    <div class=\\\"accordion__t\\\">Order details</div>\\r\\n                    <svg class=\\\"accordion__ico\\\" width=\\\"13px\\\" height=\\\"8px\\\" viewBox=\\\"0 0 13 8\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                        <g id=\\\"Version-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n                            <g id=\\\"Catalog\\\" transform=\\\"translate(-1027.000000, -961.000000)\\\" class=\\\"fill\\\">\\r\\n                                <polygon id=\\\"Fill-1\\\" transform=\\\"translate(1033.414000, 964.914000) translate(-1033.414000, -964.914000) \\\" points=\\\"1038.414 961 1033.415 966 1028.414 961 1027 962.414 1033.415 968.828 1039.828 962.414\\\"></polygon>\\r\\n                            </g>\\r\\n                        </g>\\r\\n                    </svg>\\r\\n                </div>\\r\\n                <div class=\\\"accordion__content\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <div class=\\\"order__item\\\">\\r\\n                        <!-- <a class=\\\"order__item-remove\\\" href=\\\"#\\\">Remove item</a> -->\\r\\n                        <div class=\\\"order__item-name\\\">{{item.name}}</div>\\r\\n                        <div class=\\\"order__item-brand\\\">Impression Tray</div>\\r\\n                        <div class=\\\"order__item-model\\\">Model: 2120 <span class=\\\"divider\\\">| </span>SKU: {{item.sku}}</div>\\r\\n                        <div class=\\\"order__item-descr\\\">Case of 10 Bags with 12 per Bag</div>\\r\\n                        <div class=\\\"order__item-other\\\">\\r\\n                            <div class=\\\"order__item-price\\\">Unit price: {{item.placedPrice.formattedAmount}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"order__item-other\\\">\\r\\n                          <div class=\\\"order__item-price\\\">Quantity: {{item.quantity}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"accordion__item\\\">\\r\\n                <div class=\\\"accordion__header\\\" (click)=\\\"toggleAccordion($event)\\\">\\r\\n                    <div class=\\\"accordion__t\\\">Order comments</div>\\r\\n                    <svg class=\\\"accordion__ico\\\" width=\\\"13px\\\" height=\\\"8px\\\" viewBox=\\\"0 0 13 8\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\r\\n                        <g id=\\\"Version-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\r\\n                            <g id=\\\"Catalog\\\" transform=\\\"translate(-1027.000000, -961.000000)\\\" class=\\\"fill\\\">\\r\\n                                <polygon id=\\\"Fill-1\\\" transform=\\\"translate(1033.414000, 964.914000) translate(-1033.414000, -964.914000) \\\" points=\\\"1038.414 961 1033.415 966 1028.414 961 1027 962.414 1033.415 968.828 1039.828 962.414\\\"></polygon>\\r\\n                            </g>\\r\\n                        </g>\\r\\n                    </svg>\\r\\n                </div>\\r\\n                <div class=\\\"accordion__content\\\">\\r\\n                    <div class=\\\"list list--comments\\\">\\r\\n                        <div class=\\\"list__item\\\">\\r\\n                            <div class=\\\"list__item-info\\\">\\r\\n                                <div class=\\\"list__item-author\\\">Dmitriy Petrov</div>\\r\\n                                <div class=\\\"list__item-date\\\">21 Feb 2019 11:45</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"list__item-status\\\">All is good</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"list__item\\\">\\r\\n                            <div class=\\\"list__item-info\\\">\\r\\n                                <div class=\\\"list__item-author\\\">Dmitriy Petrov</div>\\r\\n                                <div class=\\\"list__item-date\\\">21 Feb 2019 11:45</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"list__item-status\\\">All is bad</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"list__item\\\">\\r\\n                            <div class=\\\"list__item-info\\\">\\r\\n                                <div class=\\\"list__item-author\\\">Dmitriy Petrov</div>\\r\\n                                <div class=\\\"list__item-date\\\">21 Feb 2019 11:45</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"list__item-status\\\">WTF</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn--blue\\\">Add comment</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"order__actions\\\" *ngIf=\\\"order\\\">\\r\\n            <a (click)=\\\"addProductToCart()\\\" class=\\\"btn btn--green\\\">Add to current Order</a>\\r\\n            <a class=\\\"btn btn--outline\\\" [routerLink]=\\\"['/invoice',order.number]\\\">View Invoice</a>\\r\\n        </div>\\r\\n        <app-mobile-cart-summary [activeOrderMobileSidebar]=\\\"mobileOrderSidebar\\\"></app-mobile-cart-summary>\\r\\n    </div>\\r\\n    <div class=\\\"sidebar sidebar--bg-gray d-none d-lg-block\\\">\\r\\n        <div class=\\\"sidebar__inner\\\">\\r\\n          <app-active-order></app-active-order>\\r\\n        </div>\\r\\n    </div>\\r\\n</main>\\r\\n\"","module.exports = \"<main class=\\\"main container\\\">\\r\\n  <div class=\\\"order\\\">\\r\\n    <h1>Orders</h1>\\r\\n    <div class=\\\"row page__sort\\\">\\r\\n      <div class=\\\"col-md-auto page__sort-date\\\">\\r\\n        From\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\r\\n             name=\\\"dp1\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"startDate\\\" (ngModelChange)=\\\"filterOrdersByDate()\\\" (click)=\\\"d1.toggle()\\\">\\r\\n        To\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\r\\n             name=\\\"dp2\\\" ngbDatepicker #d2=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"endDate\\\" (ngModelChange)=\\\"filterOrdersByDate()\\\" (click)=\\\"d2.toggle()\\\">\\r\\n      </div>\\r\\n      <div class=\\\"alert alert-danger col-md-auto m-0\\\" *ngIf=\\\"!validFilterDate\\\">Date is not valid</div>\\r\\n      <div class=\\\"col-md-auto page__sort-filter\\\">\\r\\n        Filter by status\\r\\n        <div class=\\\"dropdown\\\">\\r\\n          <div class=\\\"dropdown__toggle\\\">{{status}}</div>\\r\\n          <div class=\\\"dropdown__menu dropdown__menu--up\\\">\\r\\n            <a (click)=\\\"changeActiveStatus('All')\\\" class=\\\"dropdown__menu-item\\\">All</a>\\r\\n            <a (click)=\\\"changeActiveStatus('New')\\\" class=\\\"dropdown__menu-item\\\">New</a>\\r\\n            <a (click)=\\\"changeActiveStatus('Awaiting approwal')\\\" class=\\\"dropdown__menu-item\\\">Awaiting approwal</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <colgroup>\\r\\n          <col class=\\\"col-w-160\\\" />\\r\\n          <col class=\\\"col-w-140\\\" />\\r\\n          <col class=\\\"col-w-100\\\" />\\r\\n          <col class=\\\"col-w-80\\\" />\\r\\n          <col class=\\\"col-w-140\\\" />\\r\\n          <col class=\\\"col-w-130\\\" />\\r\\n          <col class=\\\"col-w-130\\\" />\\r\\n        </colgroup>\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Order ID</th>\\r\\n            <th>Status</th>\\r\\n            <th>Date</th>\\r\\n            <th># Items</th>\\r\\n            <th>Created by</th>\\r\\n            <th>Assigned to</th>\\r\\n            <th>Total</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngFor=\\\"let order of orders\\\">\\r\\n          <tr>\\r\\n          <td><a [routerLink]=\\\"['/order-details',order.number]\\\">{{order.number}}</a></td>\\r\\n          <td>{{order.status}}</td>\\r\\n          <td>{{order.createdDate | date: 'EEE, dd/MM '}}</td>\\r\\n          <td>{{order.items.length}}</td>\\r\\n          <td>{{order.createdBy}}</td>\\r\\n          <td>{{order.assignedTo}}</td>\\r\\n          <td>{{order.total.formattedAmount}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-nav\\\">\\r\\n        <div class=\\\"row align-items-end justify-content-center\\\">\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <div class=\\\"page-nav__total\\\">You've viewed {{orders.length}} of {{paginationInfo.collectionSize}} orders</div>\\r\\n            <ngb-pagination\\r\\n            [(page)]=\\\"paginationInfo.page\\\"\\r\\n            [pageSize]=\\\"paginationInfo.pageSize\\\"\\r\\n            [collectionSize]=\\\"paginationInfo.collectionSize\\\"\\r\\n            (pageChange)=\\\"pageChanged()\\\"></ngb-pagination>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto ml-sm-auto\\\">\\r\\n              Show\\r\\n              <app-page-size-selector [defaultPageSize]=\\\"paginationInfo.pageSize\\\" [pageSizes]=\\\"pageSizes\\\" (pageSizeChanged)=\\\"pageSizeChanged($event)\\\" ></app-page-size-selector>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"<!-- <div class=\\\"col\\\">\\r\\n  <div class=\\\"dropdown\\\">\\r\\n  <div class=\\\"dropdown__toggle\\\">{{pageSize}}</div>\\r\\n  <div class=\\\"dropdown__menu dropdown__menu--up\\\">\\r\\n    <a *ngFor=\\\"let ps of pageSizes\\\" class=\\\"dropdown__menu-item\\\" (click)=\\\"onPageSizeClicked(ps)\\\">{{ps}}</a>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n\\r\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n      <button class=\\\"btn btn-outline-secondary\\\" id=\\\"dropdownPageSizes\\\" ngbDropdownToggle>{{pageSize}}</button>\\r\\n      <div ngbDropdownMenu aria-labelledby=\\\"dropdownPageSizes\\\">\\r\\n        <button ngbDropdownItem *ngFor=\\\"let ps of pageSizes\\\" (click)=\\\"onPageSizeClicked(ps)\\\">{{ps}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\"","module.exports = \"<app-active-order-mobile #mobileOrderSidebar></app-active-order-mobile>\\r\\n<main class=\\\"main container\\\">\\r\\n  <div class=\\\"content\\\" *ngIf=\\\"product\\\">\\r\\n    <div class=\\\"row product\\\">\\r\\n      <div class=\\\"col-md-auto product__gallery\\\">\\r\\n        <div class=\\\"product__gallery-img\\\">\\r\\n          <img src=\\\"{{ product.primaryImage.url }}\\\" alt=\\\"\\\" width=\\\"300\\\" height=\\\"300\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"list list--gallery\\\">\\r\\n          <div class=\\\"list__item\\\" *ngFor=\\\"let img of product.images\\\">\\r\\n            <div class=\\\"list__img\\\">\\r\\n              <img\\r\\n                class=\\\"list__pic\\\"\\r\\n                src=\\\"{{ img.url }}\\\"\\r\\n                alt=\\\"\\\"\\r\\n                (click)=\\\"openImageModal(content)\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <ng-template #content let-modal>\\r\\n              <ngb-carousel *ngIf=\\\"img\\\" class=\\\"text-center\\\">\\r\\n                <ng-template ngbSlide>\\r\\n                  <div class=\\\"picsum-img-wrapper\\\">\\r\\n                    <img [src]=\\\"img.url\\\" alt=\\\"Image\\\" />\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ngb-carousel>\\r\\n            </ng-template>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md product__info\\\">\\r\\n        <div class=\\\"product__general\\\">\\r\\n          <h1>{{ product.name }}</h1>\\r\\n          <div class=\\\"product__brand\\\">{{ product.brand }}</div>\\r\\n          <div class=\\\"product__descr\\\" [innerHTML]=\\\"product.quickReview\\\">\\r\\n          </div>\\r\\n          <div class=\\\"product__model\\\">\\r\\n            Model: {{product.model}}\\r\\n            <span class=\\\"sku\\\">SKU: {{ product.sku }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"product__other\\\" *ngIf=\\\"(cart$ | async) as cart\\\">\\r\\n          <div class=\\\"product__price\\\">{{ product.price }}</div>\\r\\n          <app-change-product-quantity\\r\\n            [cart]=\\\"cart\\\"\\r\\n            [productId]=\\\"product.id\\\"\\r\\n          ></app-change-product-quantity>\\r\\n        </div>\\r\\n        <div class=\\\"product__text\\\" [innerHTML]=\\\"product.fullReview\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <app-mobile-cart-summary [activeOrderMobileSidebar]=\\\"mobileOrderSidebar\\\"></app-mobile-cart-summary>\\r\\n  </div>\\r\\n  <div class=\\\"sidebar sidebar--bg-gray d-none d-lg-block\\\">\\r\\n    <div class=\\\"sidebar__inner\\\">\\r\\n      <app-active-order></app-active-order>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CatalogComponent } from './components/catalog/catalog.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { ForApprovalComponent } from './components/forapproval/forapproval.component';\r\nimport { CompanyComponent } from './components/company/company.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { BulkOrderComponent } from './components/bulk-order/bulk-order.component';\r\nimport { OrderDetailsComponent } from './components/orders/order-details/order-details.component';\r\nimport { ForApprovalDetailsComponent } from './components/forapproval/forapproval-details/forapproval-details.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { InvoiceComponent } from './components/orders/invoice/invoice.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n    // basic routes\r\n    //{ path: '', redirectTo: 'catalog', pathMatch: 'full', canActivate: [AuthGuard] },\r\n    //{ path: 'catalog', component: CatalogComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'orders', component: OrdersComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'forapproval', component: ForApprovalComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'company', component: CompanyComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'account', component: AccountComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'login', component: LoginComponent },\r\n    //{ path: 'activeorder', component: ActiveOrderSummaryComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'invoice', component: ActiveOrderPostCheckoutComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'bulkorder', component: BulkOrderComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'order-details/:id', component: OrderDetailsComponent, canActivate: [AuthGuard] },\r\n    //{ path: 'forapproval-details/:id', component: ForApprovalDetailsComponent, canActivate: [AuthGuard] }\r\n\r\n  { path: '', redirectTo: 'catalog', pathMatch: 'full'},\r\n  { path: 'catalog', component: CatalogComponent},\r\n  { path: 'product-details/:id', component: ProductDetailsComponent },\r\n  { path: 'orders', component: OrdersComponent},\r\n  { path: 'forapproval', component: ForApprovalComponent},\r\n  { path: 'company', component: CompanyComponent},\r\n  { path: 'account', component: AccountComponent},\r\n  { path: 'bulkorder', component: BulkOrderComponent},\r\n  { path: 'order-details/:id', component: OrderDetailsComponent },\r\n  { path: 'forapproval-details/:id', component: ForApprovalDetailsComponent},\r\n  { path: 'invoice/:id', component: InvoiceComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'vc-procurement-portal';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClientXsrfModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n// 3d\r\nimport { BlockUIModule } from 'ng-block-ui';\r\nimport { NgbModule, NgbDateAdapter, NgbDateNativeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\n// custom modules import\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ConfirmModalModule } from './modules/confirm-modal/confirm-modal.module';\r\n\r\nimport { HeaderPanelComponent } from './components/container/header-panel/header-panel.component';\r\nimport { MainPanelComponent } from './components/container/main-panel/main-panel.component';\r\nimport { FooterPanelComponent } from './components/container/footer-panel/footer-panel.component';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { ActiveOrderComponent } from './components/active-order/active-order.component';\r\nimport { BulkOrderComponent } from './components/bulk-order/bulk-order.component';\r\nimport { CatalogComponent } from './components/catalog/catalog.component';\r\nimport { SearchProductsComponent } from './components/catalog/search-products/search-products.component';\r\nimport { CategoriesComponent } from './components/catalog/categories/categoires.component';\r\nimport { CompanyComponent } from './components/company/company.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { OrderDetailsComponent } from './components/orders/order-details/order-details.component';\r\nimport { ForApprovalComponent } from './components/forapproval/forapproval.component';\r\nimport { ForApprovalDetailsComponent } from './components/forapproval/forapproval-details/forapproval-details.component';\r\nimport { PageSizeSelectorComponent } from './components/page-size-selector/page-size-selector.component';\r\nimport { MobileCartSummaryComponent } from './components/catalog/mobile-cart-summary/mobile-cart-summary.component';\r\nimport { ActiveOrderMobileComponent } from './components/active-order/active-order-mobile/active-order-mobile.component';\r\n// services\r\n\r\n\r\n// services modules\r\n// import { SharedService } from './services/shared-service';\r\n// import { AuthGuard } from './guards';\r\n\r\n// directives\r\nimport { RemoveWrapperDirective } from './directives/remove-wrapper.directive';\r\nimport { ChangeProductQuantityComponent } from './components/catalog/change-product-quantity/change-product-quantity.component';\r\nimport { AuthInterceptor } from './services/interceptors/auth-interceptor';\r\nimport { RequestInterceptor } from './services/interceptors/request-interceptor';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { InvoiceComponent } from './components/orders/invoice/invoice.component';\r\nimport { BulkOrderManualComponent } from './components/bulk-order/bulk-order-manual/bulk-order-manual.component';\r\nimport { ConfirmEqualValidatorDirective } from './directives/match-value.directive';\r\nimport { ChangeProductQuantityActiveOrderComponent } from './components/active-order/change-product-quantity-active-order/change-product-quantity-active-order.component';\r\nimport { BulkOrderItemComponent } from './components/bulk-order/bulk-order-manual/bulk-order-item/bulk-order-item.component';\r\nimport { CompanyDetailsComponent } from './components/company/company-details/company-details.component';\r\nimport { CompanyUsersComponent } from './components/company/company-users/company-users.component';\r\nimport { RoleManagementComponent } from './components/company/role-management/role-management.component';\r\nimport { BulkOrderCsvComponent } from './components/bulk-order/bulk-order-csv/bulk-order-csv.component';\r\nimport { CheckoutModalComponent } from './components/active-order/checkout-modal/checkout-modal.component';\r\nimport { OnlyNumberDirective } from './directives/only-number.directive';\r\nimport { EditCompanyUserModalFormComponent } from './components/company/edit-company-user-modal-form/edit-company-user-modal-form.component';\r\nimport { AlertsComponent } from './components/alerts/alerts.component';\r\n// import { initializeAppConfig, AppConfig } from './services/app-config.service';\r\n\r\n// import { HttpClientInMemoryWebApiModule, InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderPanelComponent,\r\n    MainPanelComponent,\r\n    FooterPanelComponent,\r\n    AccountComponent,\r\n    ActiveOrderComponent,\r\n    BulkOrderComponent,\r\n    CatalogComponent,\r\n    SearchProductsComponent,\r\n    CategoriesComponent,\r\n    CompanyComponent,\r\n    MenuComponent,\r\n    OrdersComponent,\r\n    OrderDetailsComponent,\r\n    ForApprovalComponent,\r\n    ForApprovalDetailsComponent,\r\n    MobileCartSummaryComponent,\r\n    PageSizeSelectorComponent,\r\n    ChangeProductQuantityComponent,\r\n    ProductDetailsComponent,\r\n    InvoiceComponent,\r\n    EditCompanyUserModalFormComponent,\r\n    ChangeProductQuantityActiveOrderComponent,\r\n    ActiveOrderMobileComponent,\r\n    // directives\r\n    RemoveWrapperDirective,\r\n    BulkOrderManualComponent,\r\n    ConfirmEqualValidatorDirective,\r\n    BulkOrderItemComponent,\r\n    CompanyDetailsComponent,\r\n    CompanyUsersComponent,\r\n    RoleManagementComponent,\r\n    BulkOrderCsvComponent,\r\n    CheckoutModalComponent,\r\n    OnlyNumberDirective,\r\n    AlertsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    // HttpClientXsrfModule\r\n    //     .withOptions({\r\n    //         cookieName: 'XSRF-TOKEN',\r\n    //         headerName: 'X-XSRF-TOKEN'\r\n    //     }),\r\n    NgbModule,\r\n    ScrollingModule,\r\n    // NgbPaginationModule,\r\n    // NgbDropdownModule,\r\n    // NgbDatepickerModule,\r\n    ConfirmModalModule,\r\n    BlockUIModule.forRoot({\r\n      delayStart: 1000,\r\n      delayStop: 1000\r\n    }),\r\n    // InMemoryWebApiModule.forRoot(DataService)\r\n  ],\r\n  providers: [\r\n    // { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\r\n    { provide: NgbDateAdapter, useClass: NgbDateNativeAdapter},\r\n\r\n    // fakeBackendProvider,\r\n    // { provide: APP_INITIALIZER,\r\n    //   useFactory: initializeAppConfig,\r\n    //   deps: [AppConfig], multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [EditCompanyUserModalFormComponent, CheckoutModalComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { IUser } from 'src/app/models/dto/iuser';\r\nimport { UserConverterService } from 'src/app/services/converters/user-converter.service';\r\nimport { AlertsService } from 'src/app/services/alerts.service';\r\nimport { of } from 'rxjs';\r\nimport { concatAll, concatMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  user: IUser;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private userConverter: UserConverterService,\r\n    private aletsService: AlertsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userService.getCurrentUser().subscribe((data: any) => {\r\n      this.user = data as IUser;\r\n      console.log(this.user);\r\n    });\r\n  }\r\n\r\n  updateUser() {\r\n    const updatedUser = this.userConverter.toEditCurrentAccount(this.user);\r\n    const newPhoneNumber = this.userConverter.toEditCurrentAccountPhoneNumber(this.user);\r\n    this.userService.updateUser(updatedUser)\r\n    .pipe(concatMap(() => this.userService.updatePhoneNumber(newPhoneNumber)))\r\n    .subscribe(() => this.aletsService.success('Account data is update successfuly!'));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWN0aXZlLW9yZGVyL2FjdGl2ZS1vcmRlci1tb2JpbGUvYWN0aXZlLW9yZGVyLW1vYmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, HostBinding, Renderer2 } from '@angular/core';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\nimport { ICart, ILineItem } from 'src/app/models/dto/icart';\r\nimport { Observable } from 'rxjs';\r\nimport { CheckoutModalComponent } from '../checkout-modal/checkout-modal.component';\r\nimport { ConfirmService } from 'src/app/modules/confirm-modal/confirm-modal-service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IToggleable } from 'src/app/models/itoggleable';\r\nimport { MobileViewService } from 'src/app/services/mobile-view.service';\r\n\r\n@Component({\r\n  selector: 'app-active-order-mobile',\r\n  templateUrl: './active-order-mobile.component.html',\r\n  styleUrls: ['./active-order-mobile.component.scss']\r\n})\r\nexport class ActiveOrderMobileComponent implements OnInit, IToggleable {\r\n  cart$: Observable<ICart>;\r\n  isOpen = false;\r\n\r\n  constructor(\r\n    private activeOrderService: ActiveOrderService,\r\n    private modalService: NgbModal,\r\n    private confirmService: ConfirmService,\r\n    private mobileSidebarService: MobileViewService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeOrderService.Cart;\r\n    this.cart$.subscribe();\r\n    this.activeOrderService.refreshCart();\r\n  }\r\n\r\n  toggle() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  closeSidebar() {\r\n    this.mobileSidebarService.closeSidebar(this);\r\n  }\r\n\r\n  removeItem(item: ILineItem) {\r\n    this.closeSidebar();\r\n    const confirmOptions = {\r\n      title: 'Line item removing',\r\n      message:\r\n        'Are you sure you want to remove this line item from the active order?'\r\n    };\r\n    this.confirmService\r\n      .confirm(confirmOptions)\r\n      .then(() => this.activeOrderService.removeItem(item.id).subscribe());\r\n  }\r\n\r\n  clear() {\r\n    this.closeSidebar();\r\n    const confirmOptions = {\r\n      title: 'Active order cleaning',\r\n      message: 'Are you sure you want to clear the active order?'\r\n    };\r\n    this.confirmService\r\n      .confirm(confirmOptions)\r\n      .then(() => this.activeOrderService.clearAllItems().subscribe());\r\n  }\r\n\r\n  checkout(cart: ICart) {\r\n    this.closeSidebar();\r\n    const modalRef = this.modalService.open(CheckoutModalComponent, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      size: 'lg'\r\n    });\r\n    modalRef.componentInstance.cart = cart;\r\n    modalRef.result.then(result => {\r\n      this.activeOrderService.createOrder().subscribe();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWN0aXZlLW9yZGVyL2FjdGl2ZS1vcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActiveOrderService } from '../../services/active-order.service';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { ILineItem, ICart } from 'src/app/models/dto/icart';\r\nimport { ConfirmService } from 'src/app/modules/confirm-modal/confirm-modal-service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CheckoutModalComponent } from './checkout-modal/checkout-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-active-order',\r\n  templateUrl: './active-order.component.html',\r\n  styleUrls: ['./active-order.component.scss']\r\n})\r\nexport class ActiveOrderComponent implements OnInit {\r\n\r\n  cart$: Observable<ICart>;\r\n\r\n  constructor(private activeOrderService: ActiveOrderService, private confirmService: ConfirmService, private modalService: NgbModal) {  }\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeOrderService.Cart;\r\n    this.cart$.subscribe();\r\n    this.activeOrderService.refreshCart();\r\n  }\r\n\r\n  removeItem(item: ILineItem) {\r\n    const confirmOptions = { title: 'Line item removing', message: 'Are you sure you want to remove this line item from the active order?' };\r\n    this.confirmService.confirm(confirmOptions).then(() => this.activeOrderService.removeItem(item.id).subscribe(), () => { });\r\n  }\r\n\r\n  clear() {\r\n    const confirmOptions = { title: 'Active order cleaning', message: 'Are you sure you want to clear the active order?' };\r\n    this.confirmService.confirm(confirmOptions).then(() => this.activeOrderService.clearAllItems().subscribe() );\r\n  }\r\n\r\n  decrementQuantity(item: ILineItem) {\r\n    if (item.quantity <= 1) {\r\n      this.removeItem(item);\r\n      return;\r\n    }\r\n    item.quantity--;\r\n    this.activeOrderService\r\n      .changeItemQuantity(item.id, item.quantity)\r\n      .subscribe();\r\n  }\r\n\r\n  incrementQuantity(item: ILineItem) {\r\n    item.quantity++;\r\n    this.activeOrderService\r\n      .changeItemQuantity(item.id, item.quantity)\r\n      .subscribe();\r\n  }\r\n\r\n  updateLineItemQuantity(lineItem: ILineItem) {\r\n    this.activeOrderService\r\n      .changeItemQuantity(lineItem.id, lineItem.quantity)\r\n      .subscribe();\r\n  }\r\n\r\n  checkout(cart: ICart) {\r\n    const modalRef = this.modalService.open(CheckoutModalComponent, {\r\n      centered: true,\r\n      backdrop: 'static',\r\n      size: 'lg'\r\n    });\r\n    modalRef.componentInstance.cart = cart;\r\n    modalRef.result.then(result => {\r\n      this.activeOrderService.createOrder().subscribe();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWN0aXZlLW9yZGVyL2NoYW5nZS1wcm9kdWN0LXF1YW50aXR5LWFjdGl2ZS1vcmRlci9jaGFuZ2UtcHJvZHVjdC1xdWFudGl0eS1hY3RpdmUtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { ICart, ILineItem } from 'src/app/models/dto/icart';\r\nimport { Subject, Subscription, EMPTY } from 'rxjs';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\nimport { ConfirmService } from 'src/app/modules/confirm-modal/confirm-modal-service';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-change-product-quantity-active-order',\r\n  templateUrl: './change-product-quantity-active-order.component.html',\r\n  styleUrls: ['./change-product-quantity-active-order.component.scss']\r\n})\r\nexport class ChangeProductQuantityActiveOrderComponent implements OnInit, OnDestroy {\r\n\r\n  @Input()\r\n  cart: ICart;\r\n  @Input()\r\n  lineItem: ILineItem;\r\n\r\n  productQuantity$ = new Subject<number>();\r\n  private quantitySub: Subscription;\r\n\r\n  constructor(private readonly activeOrderService: ActiveOrderService, private confirmService: ConfirmService) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.quantitySub = this.productQuantity$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(quantity => {\r\n        console.log('New quantity: ', quantity);\r\n        this.updateLineItemQuantity(+quantity);\r\n        return EMPTY;\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  removeItem(item: ILineItem) {\r\n    const confirmOptions = { title: 'Line item removing', message: 'Are you sure you want to remove this line item from the active order?' };\r\n    this.confirmService.confirm(confirmOptions).then(() => this.activeOrderService.removeItem(item.id).subscribe(), () => { });\r\n  }\r\n\r\n  decrementQuantity(lineItem: ILineItem) {\r\n    if (lineItem.quantity <= 1) {\r\n      this.removeItem(lineItem);\r\n      return;\r\n    }\r\n    lineItem.quantity--;\r\n    this.activeOrderService.changeItemQuantity(lineItem.id, lineItem.quantity).subscribe();\r\n  }\r\n\r\n  incrementQuantity(lineItem: ILineItem) {\r\n    lineItem.quantity++;\r\n    this.activeOrderService.changeItemQuantity(lineItem.id, lineItem.quantity).subscribe();\r\n  }\r\n\r\n  onChangeQuantity(quantityText: string) {\r\n    const quantity = +quantityText;\r\n    this.productQuantity$.next(quantity);\r\n  }\r\n\r\n  private updateLineItemQuantity(quantity: number) {\r\n    const item = this.lineItem;\r\n    this.activeOrderService.changeItemQuantity(item.id, quantity).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.quantitySub) {\r\n      this.quantitySub.unsubscribe();\r\n      this.quantitySub = null;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWN0aXZlLW9yZGVyL2NoZWNrb3V0LW1vZGFsL2NoZWNrb3V0LW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ICart } from 'src/app/models/dto/icart';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-checkout-modal',\r\n  templateUrl: './checkout-modal.component.html',\r\n  styleUrls: ['./checkout-modal.component.scss']\r\n})\r\nexport class CheckoutModalComponent implements OnInit {\r\n  @Input() cart: ICart;\r\n  showOrderItems: boolean = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggleAccordion(event) {\r\n    event.target.parentElement.classList.toggle('accordion__item--active');\r\n  }\r\n\r\n  toggleOrderDetails(event){\r\n    event.target.parentElement.classList.toggle('accordion__item--active');\r\n    this.showOrderItems = !this.showOrderItems;\r\n  }\r\n\r\n  checkout() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  closeModal() {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, Input, EventEmitter } from '@angular/core';\r\nimport { AlertsService, Alert } from 'src/app/services/alerts.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-alerts',\r\n  templateUrl: './alerts.component.html',\r\n  styles: []\r\n})\r\nexport class AlertsComponent implements OnInit {\r\n\r\n  alerts$: Observable<Alert[]>;\r\n\r\n  dismissible = true;\r\n\r\n  constructor(private alertsService: AlertsService) {\r\n  }\r\n  ngOnInit() {\r\n    this.alerts$ = this.alertsService.alerts$;\r\n  }\r\n\r\n  onClosed(alert: Alert): void {\r\n    this.alertsService.dismissAlert(alert);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVsay1vcmRlci9idWxrLW9yZGVyLWNzdi9idWxrLW9yZGVyLWNzdi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bulk-order-csv',\r\n  templateUrl: './bulk-order-csv.component.html',\r\n  styleUrls: ['./bulk-order-csv.component.scss']\r\n})\r\nexport class BulkOrderCsvComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  addItemsToCart() {\r\n    // todo\r\n  }\r\n\r\n}\r\n","module.exports = \"input.ng-touched.ng-invalid {\\n  border-color: #f33;\\n  color: #f33;\\n}\\n\\ninput.ng-dirty.ng-invalid {\\n  border-color: #f33;\\n  color: #f33;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9idWxrLW9yZGVyL2J1bGstb3JkZXItbWFudWFsL2J1bGstb3JkZXItaXRlbS9DOlxcUHJvamVjdHNcXFZpcnRvQ29tbWVyY2VcXHZjLXByb2N1cmVtZW50LXRoZW1lXFxuZy1hcHAvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGJ1bGstb3JkZXJcXGJ1bGstb3JkZXItbWFudWFsXFxidWxrLW9yZGVyLWl0ZW1cXGJ1bGstb3JkZXItaXRlbS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9idWxrLW9yZGVyL2J1bGstb3JkZXItbWFudWFsL2J1bGstb3JkZXItaXRlbS9idWxrLW9yZGVyLWl0ZW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBNkIsa0JBQUE7RUFBcUIsV0FBQTtBQ0dsRDs7QURGQTtFQUEyQixrQkFBQTtFQUFxQixXQUFBO0FDT2hEIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9idWxrLW9yZGVyL2J1bGstb3JkZXItbWFudWFsL2J1bGstb3JkZXItaXRlbS9idWxrLW9yZGVyLWl0ZW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dC5uZy10b3VjaGVkLm5nLWludmFsaWQge2JvcmRlci1jb2xvcjogI2YzMzsgIGNvbG9yOiAjZjMzO31cclxuaW5wdXQubmctZGlydHkubmctaW52YWxpZCB7Ym9yZGVyLWNvbG9yOiAjZjMzOyAgY29sb3I6ICNmMzM7fVxyXG4iLCJpbnB1dC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xuICBib3JkZXItY29sb3I6ICNmMzM7XG4gIGNvbG9yOiAjZjMzO1xufVxuXG5pbnB1dC5uZy1kaXJ0eS5uZy1pbnZhbGlkIHtcbiAgYm9yZGVyLWNvbG9yOiAjZjMzO1xuICBjb2xvcjogI2YzMztcbn0iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {  } from 'events';\r\nimport { map, catchError, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IProduct } from 'src/app/models/dto/product';\r\nimport { CatalogService } from 'src/app/services';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-bulk-order-item',\r\n  templateUrl: './bulk-order-item.component.html',\r\n  styleUrls: ['./bulk-order-item.component.scss']\r\n})\r\nexport class BulkOrderItemComponent implements OnInit {\r\n\r\n  @Input()\r\n  itemForm: FormGroup;\r\n  @Input()\r\n  index: number;\r\n  @Output()\r\n  removeClicked = new EventEmitter<number>();\r\n\r\n\r\n  constructor(private catalogService: CatalogService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRemove() {\r\n    this.removeClicked.emit(this.index);\r\n  }\r\n\r\n  get id() { return this.itemForm.get('id'); }\r\n\r\n  get sku() { return this.itemForm.get('sku'); }\r\n\r\n  get productName() { return this.itemForm.get('productName'); }\r\n\r\n  get qty() { return this.itemForm.get('qty'); }\r\n\r\n\r\n  suggestedProductsFormatter = (item: {name: string}) => item.name;\r\n\r\n  searchProductsSuggestionsByName = (text$: Observable<string>) =>\r\n  text$.pipe(\r\n    debounceTime(300),\r\n    distinctUntilChanged(),\r\n    switchMap(term =>\r\n      this.getSuggestedProducts(term).pipe(\r\n       )\r\n    )\r\n  )\r\n\r\n  suggestedProductSelected(event: NgbTypeaheadSelectItemEvent) {\r\n    event.preventDefault();\r\n    if ( !!event.item ) {\r\n      const product = event.item as IProduct;\r\n      this.id.setValue(product.id);\r\n      this.sku.setValue(product.sku);\r\n      this.productName.setValue(product.name);\r\n    }\r\n  }\r\n\r\n  private getSuggestedProducts(keyword: string): Observable<IProduct[]> {\r\n    return this.catalogService.getAllProducts(1, 20, null, keyword)\r\n      .pipe(map(x => x.products),\r\n        catchError(() => {\r\n          console.log('Suggested products loading is failed');\r\n          return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVsay1vcmRlci9idWxrLW9yZGVyLW1hbnVhbC9idWxrLW9yZGVyLW1hbnVhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\r\nimport { Subject, Observable, iif, of } from 'rxjs';\r\nimport { takeUntil, debounceTime, distinctUntilChanged, switchMap, exhaust, exhaustMap, every, map, filter, tap, catchError } from 'rxjs/operators';\r\nimport { CatalogService } from 'src/app/services';\r\nimport { IProduct } from 'src/app/models/dto/product';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-bulk-order-manual',\r\n  templateUrl: './bulk-order-manual.component.html',\r\n  styleUrls: ['./bulk-order-manual.component.scss']\r\n})\r\nexport class BulkOrderManualComponent implements OnInit, OnDestroy {\r\n  newItemForm: FormGroup;\r\n  itemsForm: FormGroup;\r\n\r\n  sugesstedProducts: IProduct[];\r\n\r\n  // itemsForms: FormGroup[] = [];\r\n  private defaultItemsCount = 0;\r\n  private unsubscribe = new Subject();\r\n\r\n  get items() {\r\n    return this.itemsForm.get('items') as FormArray;\r\n  }\r\n\r\n  get itemsIsEmpty() {\r\n    return this.items.controls.length === 0;\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private catalogService: CatalogService,\r\n    private activeOrderService: ActiveOrderService\r\n  ) {\r\n    this.newItemForm = this.formBuilder.group(\r\n      {\r\n        sku: [''],\r\n        productName: [''],\r\n        qty: [1, [Validators.min(1)]]\r\n      }\r\n    );\r\n\r\n    const itemsForms: FormGroup[] = [];\r\n    for (let i = 0; i < this.defaultItemsCount; i++) {\r\n      const newItemForm = this.createItemForm();\r\n      itemsForms.push(newItemForm);\r\n    }\r\n\r\n    this.itemsForm = this.formBuilder.group({\r\n      items: this.formBuilder.array(itemsForms, this.itemsEmptyValidator )\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n  }\r\n\r\n  clearItems() {\r\n    this.items.clear();\r\n\r\n  }\r\n\r\n  addItem() {\r\n    const itemForm = this.createItemForm(\r\n      this.newItemForm.get('sku').value,\r\n      this.newItemForm.get('productName').value,\r\n      this.newItemForm.get('qty').value\r\n    );\r\n    this.items.push(itemForm);\r\n    this.validateAllFormFields(this.itemsForm);\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.items.removeAt(index);\r\n    this.validateAllFormFields(this.itemsForm);\r\n  }\r\n\r\n  addItemsToCart() {\r\n    for (const itemForm of this.items.controls as FormGroup[]) {\r\n      const productId = itemForm.get('id').value;\r\n      const quantity = itemForm.get('qty').value;\r\n      this.activeOrderService.addItem(productId, quantity).subscribe();\r\n    }\r\n  }\r\n\r\n  suggestedProductsFormatter = (item: {name: string}) => item.name;\r\n\r\n  searchProductsSuggestionsByName = (text$: Observable<string>) =>\r\n  text$.pipe(\r\n    debounceTime(300),\r\n    distinctUntilChanged(),\r\n    switchMap(term =>\r\n      this.getSuggestedProducts(term).pipe(\r\n       )\r\n    )\r\n  )\r\n\r\n  suggestedProductSelected(event: NgbTypeaheadSelectItemEvent) {\r\n    event.preventDefault();\r\n    if ( !!event.item ) {\r\n      const product = event.item as IProduct;\r\n      this.newItemForm.get('sku').setValue(product.sku);\r\n      this.newItemForm.get('productName').setValue(product.name);\r\n    }\r\n  }\r\n\r\n\r\n  private itemsEmptyValidator(itemsForms: FormArray) {\r\n    if (itemsForms == null || itemsForms.controls.length < 1) {\r\n      return { itemsEmpty: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // sku unique validator\r\n  private uniqueSkuValidator(control: FormControl): { [s: string]: boolean } {\r\n    const itemsForms = (control.parent || { parent: null }).parent as FormArray;\r\n    if (itemsForms != null) {\r\n      for (const itemForm of itemsForms.controls) {\r\n        if (  itemForm !== control.parent && itemForm.get('sku').value === control.value) {\r\n          return { uniqueSku: true };\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getProduct(sku: string): Observable<IProduct> {\r\n    return !sku ? of(null) : this.catalogService.getProductBySku(sku)\r\n    .pipe(catchError(() => {\r\n      console.log('Finding product by sku is failed');\r\n      return of(null);\r\n    } ));\r\n  }\r\n\r\n  private getSuggestedProducts(keyword: string): Observable<IProduct[]> {\r\n    return this.catalogService.getAllProducts(1, 20, null, keyword)\r\n      .pipe(map(x => x.products),\r\n        catchError(() => {\r\n          console.log('Suggested products loading is failed');\r\n          return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  private createItemForm(\r\n    sku: string = '',\r\n    productName: string = '',\r\n    qty: number = 1\r\n  ) {\r\n    const itemForm = this.formBuilder.group({\r\n      id: [null, [Validators.required]],\r\n      availableQty: [1],\r\n      sku: [sku, [Validators.required, this.uniqueSkuValidator]],\r\n      productName: [productName],\r\n      qty: [qty, [Validators.required, Validators.min(1)]]\r\n    });\r\n\r\n    itemForm.get('sku').valueChanges\r\n      .pipe(\r\n        takeUntil(this.unsubscribe),\r\n        debounceTime(200),\r\n        distinctUntilChanged(),\r\n        switchMap(x => this.getProduct(x))\r\n      )\r\n      .subscribe(p => {\r\n        itemForm.get('id').setValue(null);\r\n        // itemForm.get('sku').setValidators([Validators.required, this.uniqueSkuValidator]);\r\n        if (p != null) {\r\n          itemForm.get('id').setValue(p.id);\r\n          itemForm.get('productName').setValue(p.name);\r\n          itemForm.get('qty')\r\n            .setValidators([\r\n              Validators.required,\r\n              Validators.min(1),\r\n              // todo: set to real caonstraint value\r\n              Validators.max(100)\r\n            ]);\r\n          itemForm.get('qty').updateValueAndValidity();\r\n\r\n        } else {\r\n          itemForm.get('id').setValue(null);\r\n          if (itemForm.controls.sku.value !== '') {\r\n            itemForm.get('sku').setErrors({ skuExists: true });\r\n          }\r\n          itemForm.get('productName').setValue('');\r\n          itemForm.get('qty').setValidators( [\r\n            Validators.required,\r\n            Validators.min(1)]);\r\n        }\r\n      });\r\n\r\n    // itemForm.get('sku').updateValueAndValidity();\r\n\r\n    if (sku) {\r\n      itemForm.get('sku').markAsDirty();\r\n    }\r\n    itemForm.get('qty').markAsDirty();\r\n\r\n    return itemForm;\r\n  }\r\n\r\n\r\n private  validateAllFormFields(formGroup: FormGroup | FormArray) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n\r\n      if (control instanceof FormControl) {\r\n        control.updateValueAndValidity({ onlySelf: true });\r\n      } else if (control instanceof FormGroup || control instanceof FormArray) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYnVsay1vcmRlci9idWxrLW9yZGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { merge, Observable, of as observableOf } from 'rxjs';\r\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\n\r\nimport { ActiveOrderService } from '../../services/active-order.service';\r\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\r\n\r\ntype tabs = 'manualy' | 'csv';\r\n\r\n@Component({\r\n  selector: 'app-bulk-order',\r\n  templateUrl: './bulk-order.component.html',\r\n  styleUrls: ['./bulk-order.component.scss']\r\n})\r\nexport class BulkOrderComponent implements OnInit {\r\n\r\n  selectedTab: tabs = 'manualy'; // manualy or csv\r\n\r\n  constructor(\r\n    private activeOrderService: ActiveOrderService\r\n  ) {\r\n\r\n  }\r\n\r\n  setSelectedTab(tabName: tabs) {\r\n    this.selectedTab = tabName;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2F0YWxvZy9jYXRhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, of as observableOf } from 'rxjs';\r\nimport { CatalogService } from '../../services';\r\nimport { ActiveOrderService } from '../../services/active-order.service';\r\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\r\nimport { User } from '../../models/user';\r\nimport { Category } from 'src/app/models/dto/category';\r\nimport { PaginationInfo } from 'src/app/models/inner/pagination-info';\r\nimport { PageSizeChangedArgs } from '../page-size-selector/page-size-selector.component';\r\n//import { AppConfig } from 'src/app/services/app-config.service';\r\nimport settings_data from 'src/assets/config/config.dev.json';\r\nimport { IAppConfig } from 'src/app/models/iapp-config';\r\nimport { ICart } from 'src/app/models/dto/icart';\r\nimport { ProductConverterService } from 'src/app/services/converters/product-converter.service';\r\nimport { ProductDetails } from 'src/app/models/product';\r\nimport { MobileViewService } from 'src/app/services/mobile-view.service';\r\nimport { CategoriesComponent } from './categories/categoires.component';\r\n\r\n@Component({\r\n  selector: 'app-catalog',\r\n  templateUrl: './catalog.component.html',\r\n  styleUrls: ['./catalog.component.scss']\r\n})\r\nexport class CatalogComponent implements OnInit {\r\n  @BlockUI() blockUI: NgBlockUI;\r\n  products: ProductDetails[];\r\n  categories$: Observable<Category[]>;\r\n  cart$: Observable<ICart>;\r\n  selectedCategory: Category = null;\r\n  private searchText = '';\r\n  settings = settings_data as IAppConfig;\r\n  // paginationInfo = new PaginationInfo(AppConfig.settings.defaultPageSize);\r\n  // pageSizes = AppConfig.settings.pageSizes;\r\n  paginationInfo = new PaginationInfo(this.settings.defaultPageSize);\r\n  pageSizes = this.settings.pageSizes;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  showMobileSearch = false;\r\n\r\n  currentUser: User;\r\n  userFromApi: User;\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private activeOrderService: ActiveOrderService,\r\n    private productConverter: ProductConverterService,\r\n    private mobileSidebarService: MobileViewService\r\n  ) {\r\n    // this.currentUser = this.authenticationService.currentUserValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.Init();\r\n    this.cart$ = this.activeOrderService.Cart;\r\n    this.cart$.subscribe();\r\n  }\r\n\r\n  pageChanged() {\r\n    this.getPproducts();\r\n  }\r\n\r\n  openMobileCategories(mobileCategoies: CategoriesComponent ) {\r\n    this.mobileSidebarService.openSidebar(mobileCategoies);\r\n  }\r\n\r\n  openMobileSearch() {\r\n    this.mobileSidebarService.openMobileSearch();\r\n    this.showMobileSearch = !this.showMobileSearch;\r\n  }\r\n\r\n  closeMobileSearch() {\r\n    this.mobileSidebarService.closeMobileSearch();\r\n    this.showMobileSearch = !this.showMobileSearch;\r\n  }\r\n\r\n  pageSizeChanged(eventArgs: PageSizeChangedArgs) {\r\n    this.paginationInfo.pageSize = eventArgs.newPageSize;\r\n    this.getPproducts();\r\n  }\r\n\r\n  categoryChanged(category: Category) {\r\n    this.selectedCategory = category;\r\n    this.getPproducts();\r\n  }\r\n\r\n  getPproducts() {\r\n    const categoryId = this.selectedCategory ? this.selectedCategory.id : null;\r\n    this.catalogService.getAllProducts(this.paginationInfo.page, this.paginationInfo.pageSize, categoryId, this.searchText).subscribe((data) => {\r\n      this.products = data.products.map(product => this.productConverter.toProductDetails(product));\r\n      this.paginationInfo.page = data.metaData.pageNumber;\r\n      this.paginationInfo.collectionSize = data.metaData.totalItemCount;\r\n    });\r\n  }\r\n\r\n  searchByText(searchText: string) {\r\n    this.searchText = searchText;\r\n    this.getPproducts();\r\n  }\r\n\r\n  private Init() {\r\n    //this.blockUI.start('Loading...');\r\n    this.categories$ = this.catalogService.getAllCategories();\r\n    this.getPproducts();\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Category } from '../../../models/dto/category';\r\nimport { Observable } from 'rxjs';\r\nimport { MobileViewService } from 'src/app/services/mobile-view.service';\r\nimport { IToggleable } from 'src/app/models/itoggleable';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\nexport class CategoriesComponent implements OnInit, IToggleable {\r\n  // categories: string[] = [ 'Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5', 'Category 6', 'Category 7'];\r\n  @Input() categories: Observable<Category[]>;\r\n\r\n  selectedCategory: Category = null;\r\n  isOpen = false;\r\n\r\n  @Output() categoryChanged = new EventEmitter<Category>();\r\n  constructor(private mobileSidebarService: MobileViewService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggle() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  closeSidebar() {\r\n    this.mobileSidebarService.closeSidebar(this);\r\n  }\r\n\r\n  isActive(category: Category): boolean {\r\n    return this.selectedCategory === category;\r\n  }\r\n\r\n  selectCategory(category: Category) {\r\n    this.selectedCategory = category;\r\n    this.categoryChanged.emit(category);\r\n    if (this.isOpen) {\r\n      this.closeSidebar();\r\n    }\r\n  }\r\n\r\n  selectAllProducts() {\r\n    this.selectedCategory = null;\r\n    this.categoryChanged.emit(null);\r\n    if (this.isOpen) {\r\n      this.closeSidebar();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2F0YWxvZy9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuY29tcG9uZW50LnNjc3MifQ== */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2F0YWxvZy9jaGFuZ2UtcHJvZHVjdC1xdWFudGl0eS9jaGFuZ2UtcHJvZHVjdC1xdWFudGl0eS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\nimport { ICart, ILineItem } from 'src/app/models/dto/icart';\r\nimport { ConfirmService } from 'src/app/modules/confirm-modal/confirm-modal-service';\r\nimport { Subject, Subscription, EMPTY } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-product-quantity',\r\n  templateUrl: './change-product-quantity.component.html',\r\n  styleUrls: ['./change-product-quantity.component.scss']\r\n})\r\nexport class ChangeProductQuantityComponent implements OnInit, OnDestroy {\r\n\r\n  @Input()\r\n  cart: ICart;\r\n  @Input()\r\n  productId: string;\r\n\r\n\r\n  productQuantity$ = new Subject<number>();\r\n  private quantitySub: Subscription;\r\n\r\n  constructor(private readonly activeOrderService: ActiveOrderService, private confirmService: ConfirmService) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.quantitySub = this.productQuantity$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap(quantity => {\r\n        console.log('New quantity: ', quantity);\r\n        this.updateLineItemQuantity(+quantity);\r\n        return EMPTY;\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  get productLineItem() {\r\n    return this.getProductLineItem(this.productId);\r\n  }\r\n\r\n  removeItem(item: ILineItem) {\r\n    const confirmOptions = { title: 'Line item removing', message: 'Are you sure you want to remove this line item from the active order?' };\r\n    this.confirmService.confirm(confirmOptions).then(() => this.activeOrderService.removeItem(item.id).subscribe(), () => { } );\r\n  }\r\n\r\n  private getProductLineItem(productId: string): ILineItem {\r\n     const lineItem = this.cart.items.find(x => x.productId === productId);\r\n     return lineItem;\r\n  }\r\n\r\n  addProductToCart() {\r\n    this.activeOrderService.addItem(this.productId).subscribe();\r\n  }\r\n\r\n\r\n  decrementQuantity(lineItem: ILineItem) {\r\n    if (lineItem.quantity <= 1) {\r\n      this.removeItem(lineItem);\r\n      return;\r\n    }\r\n    lineItem.quantity--;\r\n    this.activeOrderService.changeItemQuantity(lineItem.id, lineItem.quantity).subscribe();\r\n  }\r\n\r\n  incrementQuantity(lineItem: ILineItem) {\r\n    lineItem.quantity++;\r\n    this.activeOrderService.changeItemQuantity(lineItem.id, lineItem.quantity).subscribe();\r\n  }\r\n\r\n  onChangeQuantity(quantity: number) {\r\n    this.productQuantity$.next(quantity);\r\n  }\r\n\r\n  updateLineItemQuantity(quantity: number) {\r\n    const lineItem = this.productLineItem;\r\n    this.activeOrderService.changeItemQuantity(lineItem.id, quantity).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.quantitySub) {\r\n      this.quantitySub.unsubscribe();\r\n      this.quantitySub = null;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2F0YWxvZy9tb2JpbGUtY2FydC1zdW1tYXJ5L21vYmlsZS1jYXJ0LXN1bW1hcnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ICart } from 'src/app/models/dto/icart';\r\nimport { Observable } from 'rxjs';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\nimport { ActiveOrderMobileComponent } from '../../active-order/active-order-mobile/active-order-mobile.component';\r\nimport { MobileViewService } from 'src/app/services/mobile-view.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mobile-cart-summary',\r\n  templateUrl: './mobile-cart-summary.component.html',\r\n  styleUrls: ['./mobile-cart-summary.component.scss']\r\n})\r\nexport class MobileCartSummaryComponent implements OnInit {\r\n  @Input() activeOrderMobileSidebar: ActiveOrderMobileComponent;\r\n  cart$: Observable<ICart>;\r\n\r\n  openSidebar() {\r\n    this.mobileSidebarService.openSidebar(this.activeOrderMobileSidebar);\r\n  }\r\n\r\n  constructor(private activeOrderService: ActiveOrderService, private mobileSidebarService: MobileViewService) { }\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeOrderService.Cart;\r\n    this.cart$.subscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2F0YWxvZy9zZWFyY2gtcHJvZHVjdHMvc2VhcmNoLXByb2R1Y3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy, Output, EventEmitter, Directive } from '@angular/core';\r\nimport { Subject, Subscription, BehaviorSubject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-products',\r\n  templateUrl: './search-products.component.html',\r\n  styleUrls: ['./search-products.component.scss']\r\n})\r\nexport class SearchProductsComponent implements OnInit, OnDestroy {\r\n\r\n  private searchText$ = new BehaviorSubject<string>('');\r\n  private keyupSubs: Subscription;\r\n  @Output()\r\n  searchTextChanged = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.keyupSubs = this.searchText$.pipe(\r\n      debounceTime(250),\r\n      distinctUntilChanged()\r\n    )\r\n    .subscribe(x => this.searchTextChanged.emit(x));\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.keyupSubs.unsubscribe();\r\n  }\r\n\r\n\r\n  search(text: string) {\r\n    this.searchText$.next(text);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tcGFueS9jb21wYW55LWRldGFpbHMvY29tcGFueS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrganizationService } from 'src/app/services/organization.service';\r\nimport { OrganizationDetails } from 'src/app/models/organization';\r\nimport { OrganizationConverterService } from 'src/app/services/converters/organization-converter.service';\r\nimport { IOrganization } from 'src/app/models/dto/iorganization';\r\n\r\n@Component({\r\n  selector: 'app-company-details',\r\n  templateUrl: './company-details.component.html',\r\n  styleUrls: ['./company-details.component.scss']\r\n})\r\nexport class CompanyDetailsComponent implements OnInit {\r\n  @Input() organization: IOrganization;\r\n  @Input() organizationDetails: OrganizationDetails;\r\n\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private orgConverter: OrganizationConverterService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateCompany() {\r\n    const updatedOrg = this.orgConverter.toUpdateOrganization(this.organizationDetails, this.organization);\r\n    this.organizationService\r\n      .updateOrganization(updatedOrg)\r\n      .subscribe();\r\n  }\r\n\r\n  setOrdersProperty(value: boolean) {\r\n    this.organizationDetails.returnInvalidOrdersToCreator = value;\r\n    console.log(this.organizationDetails.returnInvalidOrdersToCreator);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tcGFueS9jb21wYW55LXVzZXJzL2NvbXBhbnktdXNlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IUser } from 'src/app/models/dto/iuser';\r\nimport { IAppConfig } from 'src/app/models/iapp-config';\r\nimport { PaginationInfo } from 'src/app/models/inner/pagination-info';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserConverterService } from 'src/app/services/converters/user-converter.service';\r\nimport { OrganizationService } from 'src/app/services/organization.service';\r\nimport { PageSizeChangedArgs } from '../../page-size-selector/page-size-selector.component';\r\nimport { IOrganization } from 'src/app/models/dto/iorganization';\r\nimport settings_data from 'src/assets/config/config.dev.json';\r\nimport { ConfirmService } from 'src/app/modules/confirm-modal/confirm-modal-service';\r\nimport { EditCompanyUserModalFormComponent } from '../edit-company-user-modal-form/edit-company-user-modal-form.component';\r\n\r\n@Component({\r\n  selector: 'app-company-users',\r\n  templateUrl: './company-users.component.html',\r\n  styleUrls: ['./company-users.component.scss']\r\n})\r\nexport class CompanyUsersComponent implements OnInit {\r\n  @Input() organization: IOrganization;\r\n  users: IUser[];\r\n\r\n  settings = settings_data as IAppConfig;\r\n  paginationInfo = new PaginationInfo(this.settings.defaultPageSize);\r\n  pageSizes = this.settings.pageSizes;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private modalService: NgbModal,\r\n    private userConverter: UserConverterService,\r\n    private organizationService: OrganizationService,\r\n    private confirmService: ConfirmService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.fetchUsers();\r\n  }\r\n\r\n  pageSizeChanged(eventArgs: PageSizeChangedArgs) {\r\n    this.paginationInfo.pageSize = eventArgs.newPageSize;\r\n    this.fetchUsers();\r\n  }\r\n\r\n  pageChanged() {\r\n    this.fetchUsers();\r\n  }\r\n\r\n  fetchUsers() {\r\n    this.organizationService\r\n      .getOrganizationUsers(\r\n        this.paginationInfo.page,\r\n        this.paginationInfo.pageSize\r\n      )\r\n      .subscribe((data: any) => {\r\n        this.users = data.results;\r\n        this.paginationInfo.collectionSize = data.totalCount;\r\n      });\r\n  }\r\n\r\n  deleteUser(user: IUser) {\r\n    const confirmOptions = {\r\n      title: 'Delete user',\r\n      message: 'Are you sure you want to delete this user?'\r\n    };\r\n    this.confirmService.confirm(confirmOptions).then(() =>\r\n      this.userService.deleteUser(user.id).subscribe(() => {\r\n        this.fetchUsers();\r\n      })\r\n    );\r\n  }\r\n\r\n  openCreateUserModal() {\r\n    const modalRef = this.modalService.open(EditCompanyUserModalFormComponent, {\r\n      centered: true,\r\n      backdrop: 'static'\r\n    });\r\n    modalRef.result.then(result => {\r\n      const user = this.userConverter.toAddUser(result, this.organization);\r\n      this.userService.registerNewUser(user).subscribe(() => {\r\n        this.fetchUsers();\r\n      });\r\n    });\r\n  }\r\n\r\n  openEditUserModal(user: IUser) {\r\n    const modalRef = this.modalService.open(EditCompanyUserModalFormComponent, {\r\n      centered: true,\r\n      backdrop: 'static'\r\n    });\r\n    modalRef.componentInstance.user = user;\r\n    modalRef.componentInstance.editUserMode = true;\r\n    modalRef.result.then(result => {\r\n      const updatedUser = this.userConverter.toEditUser(result, user);\r\n      this.userService.updateUser(updatedUser).subscribe(() => {\r\n        this.fetchUsers();\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrganizationService } from 'src/app/services/organization.service';\r\nimport { IOrganization } from 'src/app/models/dto/iorganization';\r\nimport { OrganizationConverterService } from 'src/app/services/converters/organization-converter.service';\r\nimport { OrganizationDetails } from 'src/app/models/organization';\r\n\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n  organization: IOrganization;\r\n  organizationDetails: OrganizationDetails;\r\n\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private orgConverter: OrganizationConverterService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.organizationService.getUserOrganization().subscribe((data: any) => {\r\n      this.organization = data as IOrganization;\r\n      console.log('Import of organization', this.organization);\r\n      this.organizationDetails = this.orgConverter.toOrganizationDetails(this.organization);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tcGFueS9lZGl0LWNvbXBhbnktdXNlci1tb2RhbC1mb3JtL2VkaXQtY29tcGFueS11c2VyLW1vZGFsLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { User} from 'src/app/models/user';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-company-user-modal-form',\r\n  templateUrl: './edit-company-user-modal-form.component.html',\r\n  styleUrls: ['./edit-company-user-modal-form.component.scss']\r\n})\r\nexport class EditCompanyUserModalFormComponent implements OnInit {\r\n  @Input() user: User;\r\n  @Input() editUserMode: boolean;\r\n  changePassword: boolean;\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.user) {\r\n      this.user = {} as User;\r\n    }\r\n  }\r\n\r\n  passBack(userView){\r\n    if (userView.form.valid) {\r\n      this.activeModal.close(userView.value);\r\n    }\r\n  }\r\n\r\n  checkValid(form: NgForm){\r\n    form.form.controls.confirmPassword.updateValueAndValidity();\r\n  }\r\n\r\n  closeModal(){\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tcGFueS9yb2xlLW1hbmFnZW1lbnQvcm9sZS1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.scss']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGFpbmVyL2Zvb3Rlci1wYW5lbC9mb290ZXItcGFuZWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer-panel',\r\n  templateUrl: './footer-panel.component.html',\r\n  styleUrls: ['./footer-panel.component.scss']\r\n})\r\nexport class FooterPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGFpbmVyL2hlYWRlci1wYW5lbC9oZWFkZXItcGFuZWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header-panel',\r\n  templateUrl: './header-panel.component.html',\r\n  styleUrls: ['./header-panel.component.scss']\r\n})\r\nexport class HeaderPanelComponent implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGFpbmVyL21haW4tcGFuZWwvbWFpbi1wYW5lbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-panel',\r\n  templateUrl: './main-panel.component.html',\r\n  styleUrls: ['./main-panel.component.scss']\r\n})\r\nexport class MainPanelComponent implements OnInit {\r\n  @Input() path: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yYXBwcm92YWwvZm9yYXBwcm92YWwtZGV0YWlscy9mb3JhcHByb3ZhbC1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n// import { Store, select } from '@ngrx/store';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IOrder, IOrderItem, IOrderComment, OrderComment } from '../../../models/dto/iorder';\r\nimport { OrdersService } from '../../../services/orders.service';\r\nimport { IApprovalWorkFlow, IApprovalWorkFlowStep } from '../../../models/iapproval-workflow';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forapproval-details',\r\n  templateUrl: './forapproval-details.component.html',\r\n  styleUrls: ['./forapproval-details.component.scss']\r\n})\r\n\r\nexport class ForApprovalDetailsComponent implements OnInit {\r\n  isForApprove: boolean;\r\n  id: any;\r\n  private sub: any;\r\n  order: IOrder;\r\n  items: IOrderItem[];\r\n  comments: IOrderComment[];\r\n  comment: OrderComment;\r\n  approvalWorkFlow: IApprovalWorkFlow;\r\n  roles: IApprovalWorkFlowStep[];\r\n\r\n\r\n  constructor(\r\n    private ordersService: OrdersService,\r\n    private activateRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.id = activateRoute.snapshot.params['id'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ordersService.getOrders().subscribe((data: any) => {\r\n      let orders = data as IOrder[];\r\n      orders = orders.filter(order => order.id === this.id);\r\n      this.order = orders[0];\r\n      this.items = orders[0].items as IOrderItem[];\r\n      //this.comments = orders[0].comments as IOrderComment[];\r\n    });\r\n    console.log(\"order: \", this.order);\r\n  }\r\n\r\n  Decline() {\r\n    this.router.navigate(['/forapproval']);\r\n  }\r\n\r\n   Approve(comment: any) {\r\n  //   this.ordersService.getApprovalWorkflow().subscribe((data: any) => {\r\n  //     this.approvalWorkFlow = data[0] as IApprovalWorkFlow;\r\n  //     this.roles = data[0].roles as IApprovalWorkFlowStep[];\r\n  //     this.roles.sort((leftSide, rightSide): number => {\r\n  //       if (leftSide.step < rightSide.step) return -1;\r\n  //       if (leftSide.step > rightSide.step) return 1;\r\n  //       return 0;\r\n  //     });\r\n\r\n  //     let currentRole = this.roles.filter(role => role.name === this.order.toRole);\r\n  //     let currentId = currentRole[0].step;\r\n  //     let nextRole = this.roles.filter(role => role.step === currentRole[0].step + 1);\r\n  //     if (nextRole.length > 0) {\r\n  //       this.order.toRole = nextRole[0].name;\r\n  //       this.order.comments.push(new OrderComment(\"userId\", \"username\", comment));\r\n  //       this.ordersService.updateOrder(this.order).subscribe((data: IOrder) => {\r\n  //         if (this.roles.filter(role => role.step === currentRole[0].step + 1).length > 0) {\r\n  //           this.router.navigate(['/forapproval']);\r\n  //         } else {\r\n  //           this.router.navigate(['/activeorder']);\r\n  //         }\r\n  //       })\r\n  //     } else {\r\n  //       this.order.toRole = 'Completed';\r\n  //       this.router.navigate(['/activeorder']);\r\n  //     }\r\n\r\n  //     // this.ordersService.fakeGetOrders().subscribe((data: any) => {\r\n  //     //   let orders = data as IOrder[];\r\n  //     //    this.order = orders[0] as IOrder;\r\n  //     //    console.log(\"order refresh: \", this.order);\r\n  //     // });\r\n\r\n  //   });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yYXBwcm92YWwvZm9yYXBwcm92YWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaginationInfo } from 'src/app/models/inner/pagination-info';\r\n// import { AppConfig } from 'src/app/services/app-config.service';\r\nimport { OrdersService } from 'src/app/services/orders.service';\r\nimport { PageSizeChangedArgs } from '../page-size-selector/page-size-selector.component';\r\nimport { IOrder } from 'src/app/models/dto/iorder';\r\nimport settings_data from 'src/assets/config/config.dev.json';\r\nimport { IAppConfig } from 'src/app/models/iapp-config';\r\n\r\n@Component({\r\n  selector: 'app-forapproval',\r\n  templateUrl: './forapproval.component.html',\r\n  styleUrls: ['./forapproval.component.scss']\r\n})\r\nexport class ForApprovalComponent implements OnInit {\r\n  // paginationInfo = new PaginationInfo(AppConfig.settings.defaultPageSize);\r\n  // pageSizes = AppConfig.settings.pageSizes;\r\n  orders: IOrder[] = [];\r\n  settings = settings_data as IAppConfig;\r\n  paginationInfo = new PaginationInfo(this.settings.defaultPageSize);\r\n  pageSizes = this.settings.pageSizes;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  status: string = 'All';\r\n\r\n  constructor(private ordersService: OrdersService) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"forapproval component. getOrders\");\r\n    this.getAllOrders();\r\n  }\r\n\r\n  pageSizeChanged(eventArgs: PageSizeChangedArgs) {\r\n    this.paginationInfo.pageSize = eventArgs.newPageSize;\r\n    this.getAllOrders();\r\n  }\r\n\r\n  getAllOrders() {\r\n    this.ordersService\r\n      .getOrders(this.paginationInfo.page, this.paginationInfo.pageSize,this.startDate,this.endDate,this.status)\r\n      .subscribe((data: any) => {\r\n        this.orders = data.results as IOrder[];\r\n        this.paginationInfo.collectionSize = data.totalCount;\r\n        console.log('Orders ', this.orders);\r\n      });\r\n  }\r\n\r\n  pageChanged() {\r\n    this.getAllOrders();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport { MobileViewService } from 'src/app/services/mobile-view.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  isOpen = false;\r\n  constructor(\r\n    private router: Router,\r\n    private mobileSidebarService: MobileViewService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openMobileMenu() {\r\n    this.mobileSidebarService.openSidebar(this);\r\n  }\r\n\r\n  closeMobileMenu() {\r\n    this.mobileSidebarService.closeSidebar(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3JkZXJzL2ludm9pY2UvaW52b2ljZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { OrdersService } from \"src/app/services/orders.service\";\r\nimport { IOrder, IOrderItem } from 'src/app/models/dto/iorder';\r\n\r\n@Component({\r\n  selector: \"app-invoice\",\r\n  templateUrl: \"./invoice.component.html\",\r\n  styleUrls: [\"./invoice.component.scss\"]\r\n})\r\nexport class InvoiceComponent implements OnInit {\r\n  order: IOrder;\r\n  items: IOrderItem[];\r\n  constructor(\r\n    private orderService: OrdersService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.route.params);\r\n    this.route.paramMap.pipe(switchMap(params => this.orderService.getOrder(params.get('id'))))\r\n    .subscribe((data: any) => {\r\n      this.order = data as IOrder;\r\n      this.items = data.items;\r\n    });\r\n  }\r\n\r\n  getInvoicePdf(orderNumber: string) {\r\n    const url = 'storefrontapi/orders/' + `${orderNumber}` + '/invoice';\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3JkZXJzL29yZGVyLWRldGFpbHMvb3JkZXItZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n//import { Store, select } from '@ngrx/store';\r\nimport { catchError, map, tap, pluck, switchMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IOrder, IOrderItem, IOrderComment } from '../../../models/dto/iorder';\r\nimport { OrdersService } from '../../../services/orders.service';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\n\r\n@Component({\r\n  selector: 'app-order-details',\r\n  templateUrl: './order-details.component.html',\r\n  styleUrls: ['./order-details.component.scss']\r\n})\r\nexport class OrderDetailsComponent implements OnInit {\r\n  isForApprove: boolean;\r\n  id: any;\r\n  private sub: any;\r\n  order: IOrder;\r\n  items: IOrderItem[];\r\n  comments: IOrderComment[];\r\n  subTotal: string;\r\n  shipping: string;\r\n  total: string;\r\n  createdBy: string;\r\n  status: string;\r\n\r\n  constructor(\r\n    private ordersService: OrdersService,\r\n    private route: ActivatedRoute,\r\n    private readonly activeOrderService: ActiveOrderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // this.ordersService.getOrders().subscribe((data: any) => {\r\n    //   let orders = data.results as IOrder[];\r\n    //   orders = orders.filter(order => order.id === this.id);\r\n    //   this.order = orders[0] as IOrder;\r\n    //   this.items = orders[0].items as IOrderItem[];\r\n    //   this.comments = orders[0].comments as IOrderComment[];\r\n    // });\r\n    console.log(this.route.params);\r\n    this.route.paramMap\r\n      .pipe(switchMap(params => this.ordersService.getOrder(params.get('id'))))\r\n      .subscribe((data: any) => {\r\n        this.order = data as IOrder;\r\n        this.items = data.items;\r\n        this.subTotal = this.order.subTotal.formattedAmount;\r\n        this.shipping = this.order.shippingTotal.formattedAmount;\r\n        this.total = this.order.total.formattedAmount;\r\n        this.createdBy = this.order.createdBy;\r\n        this.status = this.order.status;\r\n        console.log('Order: ', this.order);\r\n        console.log('Items: ', this.items);\r\n      });\r\n  }\r\n\r\n  toggleAccordion(event) {\r\n    event.target.parentElement.classList.toggle('accordion__item--active');\r\n  }\r\n\r\n  addProductToCart() {\r\n    this.items.forEach(item => {\r\n      this.activeOrderService.addItem(item.productId, item.quantity).subscribe();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvb3JkZXJzL29yZGVycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// import { Store, select } from '@ngrx/store';\r\nimport { OrdersService } from '../../services/orders.service';\r\nimport { IOrder } from '../../models/dto/iorder';\r\nimport { User } from '../../models/user';\r\n\r\nimport { PaginationInfo } from 'src/app/models/inner/pagination-info';\r\nimport { PageSizeChangedArgs } from '../page-size-selector/page-size-selector.component';\r\n// import { AppConfig } from 'src/app/services/app-config.service';\r\nimport settings_data from 'src/assets/config/config.dev.json';\r\nimport { IAppConfig } from 'src/app/models/iapp-config';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  date = new FormControl(new Date());\r\n  serializedDate = new FormControl(new Date().toISOString());\r\n  startDate: Date;\r\n  endDate: Date;\r\n  status: string = 'All';\r\n  validFilterDate = true;\r\n\r\n  orders: IOrder[] = [];\r\n  users: User[] = [];\r\n  displayedColumns: string[] = [\r\n    'orderid',\r\n    'status',\r\n    'date',\r\n    'items',\r\n    'createdBy',\r\n    'assignedTo',\r\n    'total'\r\n  ];\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  @Input() isForApprove = false;\r\n  @Input() role: string;\r\n\r\n  // paginationInfo = new PaginationInfo(AppConfig.settings.defaultPageSize);\r\n  // pageSizes = AppConfig.settings.pageSizes;\r\n  settings = settings_data as IAppConfig;\r\n  paginationInfo = new PaginationInfo(this.settings.defaultPageSize);\r\n  pageSizes = this.settings.pageSizes;\r\n\r\n  constructor(\r\n    private ordersService: OrdersService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log('orders component. getOrders');\r\n    this.getAllOrders();\r\n  }\r\n\r\n  changeActiveStatus(status: string) {\r\n    this.status = status;\r\n    this.getAllOrders();\r\n  }\r\n\r\n  pageSizeChanged(eventArgs: PageSizeChangedArgs) {\r\n    this.paginationInfo.pageSize = eventArgs.newPageSize;\r\n    this.getAllOrders();\r\n  }\r\n\r\n  filterOrdersByDate() {\r\n    if (this.startDate > this.endDate) {\r\n      this.validFilterDate = false;\r\n    } else {\r\n      this.validFilterDate = true;\r\n      this.getAllOrders();\r\n    }\r\n  }\r\n\r\n  getAllOrders() {\r\n    this.ordersService\r\n      .getOrders(this.paginationInfo.page, this.paginationInfo.pageSize,this.startDate,this.endDate,this.status)\r\n      .subscribe((data: any) => {\r\n        console.log(data);\r\n        this.orders = data.results as IOrder[];\r\n        this.paginationInfo.collectionSize = data.totalCount;\r\n      });\r\n  }\r\n\r\n  pageChanged() {\r\n    this.getAllOrders();\r\n  }\r\n}\r\n\r\nexport class OrderError implements OnInit {\r\n  ngOnInit() {}\r\n\r\n  constructor(public payload: any) {\r\n    console.log(payload);\r\n  }\r\n}\r\n\r\nexport class GetOrdersSuccess implements OnInit {\r\n  ngOnInit() {}\r\n\r\n  constructor(public payload: any) {\r\n    console.log('GetHeroesSuccess: ' + payload);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS1zaXplLXNlbGVjdG9yL3BhZ2Utc2l6ZS1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n\r\nexport class PageSizeChangedArgs {\r\n  constructor(public newPageSize: number) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-page-size-selector',\r\n  templateUrl: './page-size-selector.component.html',\r\n  styleUrls: ['./page-size-selector.component.scss']\r\n})\r\nexport class PageSizeSelectorComponent implements OnInit {\r\n\r\n  @Input()\r\n  pageSizes: number[];\r\n  @Input()\r\n  defaultPageSize: number;\r\n  pageSize: number;\r\n\r\n  @Output()\r\n  pageSizeChanged = new EventEmitter<PageSizeChangedArgs>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.pageSize = this.defaultPageSize;\r\n\r\n  }\r\n\r\n  onPageSizeClicked(newPageSize: number) {\r\n    if (this.pageSize !== newPageSize) {\r\n      this.pageSize = newPageSize;\r\n      this.pageSizeChanged.emit(new PageSizeChangedArgs(newPageSize));\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdC1kZXRhaWxzL3Byb2R1Y3QtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CatalogService } from 'src/app/services';\r\nimport { Observable } from 'rxjs';\r\nimport { ICart } from 'src/app/models/dto/icart';\r\nimport { ActiveOrderService } from 'src/app/services/active-order.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProductDetails } from 'src/app/models/product';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss'],\r\n  providers: [NgbCarouselConfig]\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  fullDesc: ElementRef;\r\n  product: ProductDetails;\r\n  cart$: Observable<ICart>;\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private activeOrderService: ActiveOrderService,\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    config: NgbCarouselConfig\r\n  ) {\r\n    config.showNavigationArrows = false;\r\n    config.showNavigationIndicators = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cart$ = this.activeOrderService.Cart;\r\n    this.activeOrderService.refreshCart();\r\n    this.route.paramMap\r\n      .pipe(\r\n        switchMap(params => this.catalogService.getProduct(params.get('id')))\r\n      )\r\n      .subscribe((data: ProductDetails) => {\r\n        this.product = data;\r\n      });\r\n  }\r\n\r\n  openImageModal(content) {\r\n    this.modalService.open(content, { centered: true });\r\n  }\r\n\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport {\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  AbstractControl\r\n} from '@angular/forms';\r\n\r\n\r\n@Directive({\r\n  selector: '[appConfirmEqualValidator]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: ConfirmEqualValidatorDirective,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class ConfirmEqualValidatorDirective implements Validator {\r\n  @Input() appConfirmEqualValidator: string;\r\n  constructor() {}\r\n\r\n  validate(control: AbstractControl): { [key: string]: any } | null {\r\n    const controlToCompare = control.parent.get(this.appConfirmEqualValidator);\r\n    if (controlToCompare && controlToCompare.value !== control.value) {\r\n      return { notEqual: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[OnlyNumber]'\r\n})\r\nexport class OnlyNumberDirective {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @Input() OnlyNumber: boolean;\r\n\r\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n    let e = <KeyboardEvent> event;\r\n    if (this.OnlyNumber) {\r\n      if ([46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||\r\n        // Allow: Ctrl+A\r\n        (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n        // Allow: Ctrl+C\r\n        (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n        // Allow: Ctrl+V\r\n        (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n        // Allow: Ctrl+X\r\n        (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n        // Allow: home, end, left, right\r\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n          // let it happen, don't do anything\r\n          return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\r\n            e.preventDefault();\r\n        }\r\n      }\r\n  }\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appRemoveWrapper]'\r\n})\r\nexport class RemoveWrapperDirective {\r\n\r\n  constructor(private el: ElementRef) {\r\n    const parentElement = el.nativeElement.parentElement;\r\n    const element = el.nativeElement;\r\n    parentElement.removeChild(element);\r\n    parentElement.parentNode.insertBefore(element, parentElement.nextSibling);\r\n    parentElement.parentNode.removeChild(parentElement);\r\n}\r\n}\r\n","import { PagedSearchCriteria } from './common/paged-search-criteria';\r\nimport { ILanguage } from './common/language';\r\nimport { IImage } from './common/image';\r\nimport { IPageMetaData } from './common/page-meta-data';\r\nimport { ISeoInfo } from './common/seo-info';\r\n\r\nexport interface SearchCategoriesResult {\r\n  categories: Category[];\r\n  metaData: IPageMetaData;\r\n}\r\n\r\n\r\n\r\nexport interface Category {\r\n  catalogId: string;\r\n  code: string;\r\n  defaultSortBy: string;\r\n  title: string;\r\n  name: string;\r\n  outline: string;\r\n  level: number;\r\n  seoPath: string;\r\n  url: string;\r\n  seoInfo: ISeoInfo;\r\n  images: IImage[];\r\n  categories: any[];\r\n  properties: any[];\r\n  handle: string;\r\n  indexKey: string;\r\n  id: string;\r\n  parentId?: string;\r\n  primaryImage?: IImage;\r\n  image?: IImage;\r\n}\r\n\r\n\r\nexport class CategorySearchCriteria extends PagedSearchCriteria {\r\n    responseGroup: CategoryResponseGroup;\r\n    outline: string;\r\n    language: ILanguage;\r\n    keyword: string;\r\n    sortBy: string;\r\n    isFuzzySearch = true;\r\n}\r\n\r\n\r\nexport enum CategoryResponseGroup {\r\n    None = 0,\r\n    Info = 1,\r\n    WithImages = 1 << 1,\r\n    WithProperties = 1 << 2,\r\n    WithLinks = 1 << 3,\r\n    WithSeo = 1 << 4,\r\n    WithParents = 1 << 5,\r\n    WithOutlines = 1 << 6,\r\n    Small = Info | WithImages | WithSeo | WithOutlines,\r\n    Full = Info | WithImages | WithProperties | WithLinks | WithSeo | WithParents | WithOutlines\r\n}\r\n"," export class PagedSearchCriteria {\r\n        pageNumber: number;\r\n        pageSize: number;\r\n    }\r\n","import { PagedSearchCriteria } from './common/paged-search-criteria';\r\nimport { IMoney } from './common/money';\r\nimport { ICurrency } from './common/currency';\r\nimport { IAddress } from './common/address';\r\n\r\nexport class OrderSearchCriteria extends PagedSearchCriteria {\r\n  CustomerId: string;\r\n  Sort: string;\r\n  StartDate: Date;\r\n  EndDate: Date;\r\n  Status: string;\r\n  Statuses: string[];\r\n}\r\n\r\n// this entity does not exist on server\r\nexport interface IOrderComment {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  text: string;\r\n}\r\n// this entity does not exist on server\r\nexport class OrderComment implements IOrderComment {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  text: string;\r\n  constructor(userId: string, username: string, text: string) {\r\n    this.id = 'AAA';\r\n    this.userId = userId;\r\n    this.username = username;\r\n    this.text = text;\r\n  }\r\n}\r\n\r\nexport interface IOrder {\r\n  customerName: string;\r\n  customerId: string;\r\n  storeId: string;\r\n  addresses: IAddress[];\r\n  financialStatus: string;\r\n  inPayments: InPayment[];\r\n  items: IOrderItem[];\r\n  shipments: IOrderShipping[];\r\n  taxDetails: any[];\r\n  number: string;\r\n  isApproved: boolean;\r\n  status: string;\r\n  currency: ICurrency;\r\n  currencyCode: string;\r\n  isCancelled: boolean;\r\n  cancelled: boolean;\r\n  dynamicProperties: any[];\r\n  createdDate: string;\r\n  modifiedDate: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n  discounts: any[];\r\n  total: IMoney;\r\n  discountAmount: IMoney;\r\n  discountAmountWithTax: IMoney;\r\n  subTotal: IMoney;\r\n  subTotalWithTax: IMoney;\r\n  shippingTotal: IMoney;\r\n  shippingTotalWithTax: IMoney;\r\n  shippingTaxTotal: IMoney;\r\n  shippingPrice: IMoney;\r\n  shippingPriceWithTax: IMoney;\r\n  paymentTotal: IMoney;\r\n  paymentTotalWithTax: IMoney;\r\n  paymentPrice: IMoney;\r\n  paymentPriceWithTax: IMoney;\r\n  paymentDiscountTotal: IMoney;\r\n  paymentDiscountTotalWithTax: IMoney;\r\n  paymentTaxTotal: IMoney;\r\n  discountTotal: IMoney;\r\n  discountTotalWithTax: IMoney;\r\n  taxTotal: IMoney;\r\n  shippingDiscountTotalWithTax: IMoney;\r\n  shippingDiscountTotal: IMoney;\r\n  subTotalTaxTotal: IMoney;\r\n  subTotalDiscount: IMoney;\r\n  subTotalDiscountWithTax: IMoney;\r\n  id: string;\r\n}\r\n\r\nexport interface IOrderShipping {\r\n  title: string;\r\n  handle: string;\r\n  shipmentMethodCode: string;\r\n  shipmentMethodOption: string;\r\n  items: any[];\r\n  packages: any[];\r\n  inPayments: any[];\r\n  deliveryIAddress: IAddress;\r\n  taxDetails: any[];\r\n  operationType: string;\r\n  number: string;\r\n  status: string;\r\n  currency: ICurrency;\r\n  childrenOperations: any[];\r\n  dynamicProperties: any[];\r\n  createdDate: string;\r\n  modifiedDate: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n  id: string;\r\n  taxTotal: IMoney;\r\n  taxPercentRate: number;\r\n  discounts: any[];\r\n  price: IMoney;\r\n  priceWithTax: IMoney;\r\n  total: IMoney;\r\n  totalWithTax: IMoney;\r\n  itemsSubtotal: IMoney;\r\n  itemsSubtotalWithTax: IMoney;\r\n  discountAmount: IMoney;\r\n  discountAmountWithTax: IMoney;\r\n}\r\n\r\nexport interface IOrderItem {\r\n  currency: ICurrency;\r\n  reserveQuantity: number;\r\n  quantity: number;\r\n  productId: string;\r\n  sku: string;\r\n  catalogId: string;\r\n  categoryId: string;\r\n  name: string;\r\n  imageUrl: string;\r\n  isGift: boolean;\r\n  isCancelled: boolean;\r\n  taxDetails: any[];\r\n  dynamicProperties: any[];\r\n  createdDate: string;\r\n  modifiedDate: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n  id: string;\r\n  listPrice: IMoney;\r\n  listPriceWithTax: IMoney;\r\n  placedPrice: IMoney;\r\n  placedPriceWithTax: IMoney;\r\n  extendedPrice: IMoney;\r\n  extendedPriceWithTax: IMoney;\r\n  discountAmount: IMoney;\r\n  discountAmountWithTax: IMoney;\r\n  discountTotal: IMoney;\r\n  discountTotalWithTax: IMoney;\r\n  taxTotal: IMoney;\r\n  taxPercentRate: number;\r\n  discounts: any[];\r\n}\r\n\r\nexport interface InPayment {\r\n  customerId: string;\r\n  gatewayCode: string;\r\n  paymentMethodType: string;\r\n  outerId: string;\r\n  operationType: string;\r\n  number: string;\r\n  isApproved: boolean;\r\n  status: string;\r\n  currency: ICurrency;\r\n  sum: IMoney;\r\n  tax: IMoney;\r\n  isCancelled: boolean;\r\n  childrenOperations: any[];\r\n  dynamicProperties: any[];\r\n  createdDate: string;\r\n  modifiedDate: string;\r\n  createdBy: string;\r\n  modifiedBy: string;\r\n  id: string;\r\n}\r\n","import { PagedSearchCriteria } from './common/paged-search-criteria';\r\nimport { INumericRange } from './common/numeric-range';\r\nimport { ILanguage } from './common/language';\r\nimport { ICurrency } from './common/currency';\r\nimport { ITerm } from './common/term';\r\nimport { IPageMetaData } from './common/page-meta-data';\r\nimport { IImage } from './common/image';\r\nimport { ISeoInfo } from './common/seo-info';\r\nimport { IProductPrice } from './common/price';\r\nimport { IMoney } from './common/money';\r\nimport { ILocalizedString } from './common/display-name';\r\n\r\n\r\nexport interface SearchProductsResult {\r\n  products: IProduct[];\r\n  aggregations: Aggregation[];\r\n  metaData: IPageMetaData;\r\n}\r\n\r\n\r\ninterface Aggregation {\r\n  aggregationType: string;\r\n  field: string;\r\n  label: string;\r\n  items: AggregationItem[];\r\n}\r\n\r\ninterface AggregationItem {\r\n  groupType: string;\r\n  groupLabel: string;\r\n  count: number;\r\n  isApplied: boolean;\r\n  label: string;\r\n  value: string;\r\n  upper?: string;\r\n  lower?: string;\r\n}\r\n\r\nexport interface IProduct {\r\n  handle: string;\r\n  indexKey: string;\r\n  sku: string;\r\n  name: string;\r\n  title: string;\r\n  catalogId: string;\r\n  categoryId: string;\r\n  outline: string;\r\n  seoPath: string;\r\n  url: string;\r\n  isBuyable: boolean;\r\n  buyable: boolean;\r\n  isInStock: boolean;\r\n  inStock: boolean;\r\n  isActive: boolean;\r\n  trackInventory: boolean;\r\n  maxQuantity: number;\r\n  minQuantity: number;\r\n  productType: string;\r\n  enableReview: boolean;\r\n  maxNumberOfDownload: number;\r\n  hasUserAgreement: boolean;\r\n  variationProperties: VariationProperty[];\r\n  assets: any[];\r\n  variations: Variation[];\r\n  description: string;\r\n  descriptions: Description[];\r\n  price: IProductPrice;\r\n  priceWithTax: IMoney;\r\n  prices: IProductPrice[];\r\n  inventoryAll: any[];\r\n  availableQuantity: number;\r\n  seoInfo: ISeoInfo;\r\n  primaryImage: IImage;\r\n  images: IImage[];\r\n  isQuotable: boolean;\r\n  isAvailable: boolean;\r\n  available: boolean;\r\n  properties: VariationProperty[];\r\n  taxTotal: IMoney;\r\n  taxPercentRate: number;\r\n  taxDetails: any[];\r\n  discounts: any[];\r\n  currency: ICurrency;\r\n  id: string;\r\n}\r\n\r\ninterface Variation {\r\n  handle: string;\r\n  indexKey: string;\r\n  sku: string;\r\n  name: string;\r\n  title: string;\r\n  catalogId: string;\r\n  categoryId: string;\r\n  outline: string;\r\n  seoPath: string;\r\n  url: string;\r\n  titularItemId: string;\r\n  isBuyable: boolean;\r\n  buyable: boolean;\r\n  isInStock: boolean;\r\n  inStock: boolean;\r\n  isActive: boolean;\r\n  trackInventory: boolean;\r\n  maxQuantity: number;\r\n  minQuantity: number;\r\n  productType: string;\r\n  enableReview: boolean;\r\n  maxNumberOfDownload: number;\r\n  hasUserAgreement: boolean;\r\n  variationProperties: VariationProperty[];\r\n  assets: any[];\r\n  variations: any[];\r\n  descriptions: Description[];\r\n  price: IProductPrice;\r\n  priceWithTax: IMoney;\r\n  prices: IProductPrice[];\r\n  inventoryAll: any[];\r\n  availableQuantity: number;\r\n  seoInfo: ISeoInfo;\r\n  primaryImage: IImage;\r\n  images: IImage[];\r\n  isQuotable: boolean;\r\n  isAvailable: boolean;\r\n  available: boolean;\r\n  properties: any[];\r\n  taxTotal: IMoney;\r\n  taxPercentRate: number;\r\n  taxDetails: any[];\r\n  discounts: any[];\r\n  currency: ICurrency;\r\n  id: string;\r\n}\r\n\r\ninterface VariationProperty {\r\n  name: string;\r\n  type: string;\r\n  valueType: string;\r\n  valueId: string;\r\n  localizedValues: any[];\r\n  value: string;\r\n  displayName: string;\r\n  displayNames: ILocalizedString[];\r\n  isMultivalue: boolean;\r\n  values: any[];\r\n  indexKey: string;\r\n  id: string;\r\n}\r\n\r\n\r\ninterface Description {\r\n  reviewType: string;\r\n  content: string;\r\n  indexKey: string;\r\n  value: string;\r\n  language: ILanguage;\r\n}\r\n\r\nexport class ProductSearchCriteria extends PagedSearchCriteria {\r\n  responseGroup: ItemResponseGroup;\r\n  outline: string;\r\n  currency: ICurrency;\r\n  priceRange: INumericRange;\r\n  language: ILanguage;\r\n  keyword: string = '';\r\n  terms: ITerm[];\r\n  userGroups: string[];\r\n  sortBy: string;\r\n  vendorId: string;\r\n  isFuzzySearch: boolean = true;\r\n}\r\n\r\n\r\nexport enum ItemResponseGroup {\r\n        None = 0,\r\n        /**Only simple product information and properties without meta information */\r\n        ItemInfo = 1,\r\n        /**With images and assets */\r\n        ItemAssets = 1 << 1,\r\n        /**With properties meta information */\r\n        ItemProperties = 1 << 2,\r\n        /**With product associations */\r\n        ItemAssociations = 1 << 3,\r\n        /**With descriptions */\r\n        ItemEditorialReviews = 1 << 4,\r\n        /**With all product variations */\r\n        Variations = 1 << 5,\r\n        /**With product SEO information */\r\n        Seo = 1 << 6,\r\n        /**With outgoing product links to virtual catalog or categories */\r\n        Links = 1 << 7,\r\n        /**With product inventory information */\r\n        Inventory = 1 << 8,\r\n        /**With category outlines */\r\n        Outlines = 1 << 9,\r\n        /**With product referenced associations */\r\n        ReferencedAssociations = 1 << 10,\r\n        //the bits of this values must not intersect with domain ItemResponseGroup\r\n        ItemWithPrices = 1 << 20,\r\n\r\n        ItemWithDiscounts = 1 << 21,\r\n\r\n        ItemWithVendor = 1 << 22,\r\n\r\n        ItemWithPaymentPlan = 1 << 23,\r\n\r\n        ItemSmall = ItemInfo | ItemAssets | Seo | Outlines,\r\n        ItemMedium = ItemSmall | ItemProperties | ItemEditorialReviews,\r\n        ItemLarge = ItemMedium | ItemAssociations | Variations | Inventory | ItemWithPrices | ItemWithDiscounts | ItemWithVendor | ItemWithPaymentPlan,\r\n\r\n        Default = ItemSmall | ItemWithPrices | Inventory | ItemWithDiscounts | ItemWithVendor\r\n    }\r\n","export class PaginationInfo {\r\n  page = 1;\r\n  collectionSize: number;\r\n  constructor(public  pageSize: number = 10) {}\r\n}\r\n","import { IAddress } from './dto/common/address';\r\nimport { IDynamicProperty } from './dto/common/dynamic-property';\r\n\r\nexport class OrganizationDetails {\r\n  id: string;\r\n  name: string;\r\n  billingAddress: IAddress;\r\n  shippingAddress: IAddress;\r\n  phoneNumber: string;\r\n  email: string;\r\n  contactPerson: string;\r\n  taxNumber: string;\r\n  companyRegistrationNumber: string;\r\n  returnInvalidOrdersToCreator: boolean;\r\n}\r\n\r\nexport class UpdateOrganization {\r\n  id: string;\r\n  addresses: IAddress[];\r\n  name: string;\r\n  dynamicProperties: IDynamicProperty[];\r\n  phones: string[];\r\n  emails: string[];\r\n}\r\n","import { IProductPrice } from './dto/common/price';\r\nimport { IImage } from './dto/common/image';\r\n\r\nexport class ProductDetails {\r\n  id: string;\r\n  sku: string;\r\n  name: string;\r\n  title: string;\r\n  price: string;\r\n  brand: string;\r\n  model: string;\r\n  quickReview: string;\r\n  fullReview: string;\r\n  primaryImage: IImage;\r\n  images: IImage[];\r\n}\r\n","export class User {\r\n    id: number;\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    role: string;\r\n    token?: string;\r\n    workflowRole: string;\r\n    email: string;\r\n    organizationId: string;\r\n}\r\n\r\nexport class AddNewUser {\r\n  userName: string;\r\n  password: string;\r\n  firstName: string;\r\n  fullName: string;\r\n  lastName: string;\r\n  role: string;\r\n  email: string;\r\n  organizationId: string;\r\n}\r\n\r\nexport class EditUser {\r\n  firstName: string;\r\n  lastName: string;\r\n  fullName: string;\r\n  roles: Array<string>;\r\n  email: string;\r\n  id: string;\r\n}\r\n\r\nexport class EditUserPassword {\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  newPasswordConfirm: string;\r\n}\r\n\r\nexport class EditUserPhone {\r\n  phoneNumber: string;\r\n}\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, Injectable, Directive, TemplateRef, NgModule } from '@angular/core';\r\nimport { NgbModal, NgbModalRef, NgbModalOptions, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/**\r\n * Options passed when opening a confirmation modal\r\n */\r\ninterface ConfirmOptions {\r\n  /**\r\n   * The title of the confirmation modal\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * The message in the confirmation modal\r\n   */\r\n  message: string;\r\n}\r\n\r\n/**\r\n * An internal service allowing to access, from the confirm modal component, the options and the modal reference.\r\n * It also allows registering the TemplateRef containing the confirm modal component.\r\n *\r\n * It must be declared in the providers of the NgModule, but is not supposed to be used in application code\r\n */\r\n@Injectable()\r\nexport class ConfirmState {\r\n  /**\r\n   * The last options passed ConfirmService.confirm()\r\n   */\r\n  options: ConfirmOptions;\r\n\r\n  /**\r\n   * The last opened confirmation modal\r\n   */\r\n  modal: NgbModalRef;\r\n\r\n  /**\r\n   * The template containing the confirmation modal component\r\n   */\r\n  template: TemplateRef<any>;\r\n}\r\n\r\n/**\r\n * A confirmation service, allowing to open a confirmation modal from anywhere and get back a promise.\r\n */\r\n@Injectable()\r\nexport class ConfirmService {\r\n\r\n  constructor(private modalService: NgbModal, private state: ConfirmState) {}\r\n\r\n  /**\r\n   * Opens a confirmation modal\r\n   * @param options the options for the modal (title and message)\r\n   * @returns {Promise<any>} a promise that is fulfilled when the user chooses to confirm, and rejected when\r\n   * the user chooses not to confirm, or closes the modal\r\n   */\r\n  confirm(options: ConfirmOptions): Promise<any> {\r\n    this.state.options = options;\r\n    this.state.modal = this.modalService.open(this.state.template);\r\n    return this.state.modal.result;\r\n  }\r\n}\r\n\r\n/**\r\n * The component displayed in the confirmation modal opened by the ConfirmService.\r\n */\r\n@Component({\r\n  selector: 'app-confirm-modal-component',\r\n  template: `<div class=\"modal-header\">\r\n      <h4 class=\"modal-title\">{{ options.title}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"no()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>{{ options.message }}</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"yes()\">Yes</button>\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"no()\">No</button>\r\n  </div>`\r\n})\r\nexport class ConfirmModalComponent {\r\n\r\n  options: ConfirmOptions;\r\n\r\n  constructor(private state: ConfirmState) {\r\n    this.options = state.options;\r\n    console.log('component initialized');\r\n  }\r\n\r\n  yes() {\r\n    this.state.modal.close('confirmed');\r\n  }\r\n\r\n  no() {\r\n    this.state.modal.dismiss('not confirmed');\r\n  }\r\n}\r\n\r\n/**\r\n * Directive allowing to get a reference to the template containing the confirmation modal component,\r\n * and to store it into the internal confirm state service. Somewhere in the view, there must be\r\n *\r\n * ```\r\n * <template confirm>\r\n *   <confirm-modal-component></confirm-modal-component>\r\n * </template>\r\n * ```\r\n *\r\n * in order to register the confirm template to the internal confirm state\r\n */\r\n@Directive({\r\n  selector: '[appConfirm]'\r\n})\r\nexport class ConfirmTemplateDirective {\r\n  constructor(confirmTemplate: TemplateRef<any>, state: ConfirmState) {\r\n    state.template = confirmTemplate;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmModalComponent, ConfirmTemplateDirective, ConfirmService, ConfirmState } from './confirm-modal-service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ ConfirmModalComponent, ConfirmTemplateDirective ],\r\n  exports: [ ConfirmModalComponent, ConfirmTemplateDirective ],\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule\r\n  ],\r\n  providers: [ConfirmService, ConfirmState]\r\n})\r\nexport class ConfirmModalModule { }\r\n","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { tap, catchError, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { ICart } from '../models/dto/icart';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActiveOrderService {\r\n  headers: HttpHeaders;\r\n  Cart = new Subject<ICart>();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.refreshCart();\r\n  }\r\n\r\n  refreshCart() {\r\n    // todo\r\n    this.getCart();\r\n\r\n  }\r\n\r\n  getCart() {\r\n    const url = 'storefrontapi/cart';\r\n    this.http.get<ICart>(url)\r\n    .subscribe(x =>\r\n      this.Cart.next(x) );\r\n  }\r\n\r\n  createOrder() {\r\n    console.log('createOrder');\r\n    const body = {};\r\n    const url = 'storefrontapi/cart/createorder';\r\n    return this.http.post<any>(url, body).pipe(tap(x => this.refreshCart()));\r\n  }\r\n\r\n  clearAllItems() {\r\n    console.log('Clear');\r\n    const url = 'storefrontapi/cart/clear';\r\n    const body = '{}';\r\n    return this.http.post<any>(url, body).pipe(tap(x => this.refreshCart()));\r\n  }\r\n\r\n  addItem(productId: string, productQuantity: number = 1) {\r\n    console.log('Add');\r\n    const body = { id: productId, quantity: productQuantity };\r\n    const url = 'storefrontapi/cart/items';\r\n    return this.http.post<any>(url, body).pipe( tap(x => this.refreshCart()));\r\n  }\r\n\r\n  removeItem(lineItemId: string) {\r\n    console.log('Remove');\r\n    const url = 'storefrontapi/cart/items?lineItemId=' + lineItemId;\r\n    return this.http.delete(url).pipe(tap(x => this.refreshCart()));\r\n  }\r\n\r\n  changeItemQuantity(lineItemId: string, quantity: number) {\r\n      const url = 'storefrontapi/cart/items';\r\n      const body = '{\"lineItemId\":\"' + lineItemId + '\",\"Quantity\":\"' + quantity + '\"}';\r\n      return this.http.put<any>(url, body).pipe(tap(x => this.refreshCart()));\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport class Alert {\r\n  constructor(public type: AlertType, public msg: string, public keepAfterRouteChange = false) {\r\n  }\r\n}\r\n\r\nexport enum AlertType {\r\n  Success = 'success',\r\n  Error =   'danger',\r\n  Info =    'info',\r\n  Warning = 'warning'\r\n}\r\n\r\n\r\n@Injectable( { providedIn: 'root' })\r\nexport class AlertsService {\r\n\r\n  private  alerts: Alert[] = [];\r\n\r\n  alerts$: Subject<Alert[]> = new Subject<Alert[]>();\r\n\r\n  constructor(private router: Router) {\r\n\r\n    router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.alerts = this.alerts.filter(alert => alert.keepAfterRouteChange );\r\n      }\r\n    });\r\n  }\r\n\r\n  success(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n  }\r\n\r\n  error(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n  }\r\n\r\n  info(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n  }\r\n\r\n  warn(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n  }\r\n\r\n\r\n  /**\r\n   * Common method for add alert to list\r\n   * @param type type of alert\r\n   * @param msg text of alert\r\n   * @param keepAfterRouteChange if it keep showing after route changes or neither\r\n   */\r\n  alert(type: AlertType, msg: string, keepAfterRouteChange = false, dismissTimeout = 5000) {\r\n    const alert = new Alert(type, msg, keepAfterRouteChange);\r\n    this.alerts.push(alert);\r\n    this.alerts$.next(this.alerts);\r\n    setTimeout(() => this.dismissAlert(alert), dismissTimeout);\r\n  }\r\n\r\n  clear() {\r\n    this.alerts = [];\r\n    this.alerts$.next(this.alerts);\r\n  }\r\n\r\n  dismissAlert(alert: Alert) {\r\n    const idx = this.alerts.indexOf(alert);\r\n    if ( idx > -1) {\r\n      this.alerts.splice(idx, 1);\r\n      this.alerts$.next(this.alerts);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        // const currentUser = this.authenticationService.currentUserValue;\r\n        // if (currentUser) {\r\n        //     // check if route is restricted by role\r\n        //     if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\r\n        //         // role not authorised so redirect to home page\r\n        //         this.router.navigate(['/']);\r\n        //         return false;\r\n        //     }\r\n        //     // authorised so return true\r\n        //     return true;\r\n        // }\r\n\r\n        // // not logged in so redirect to login page with the return url\r\n        // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        // return false;\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError, map, startWith, switchMap } from 'rxjs/operators';\r\nimport { SearchCategoriesResult, Category, CategorySearchCriteria, CategoryResponseGroup } from '../models/dto/category';\r\nimport { ProductSearchCriteria, IProduct, SearchProductsResult, ItemResponseGroup } from '../models/dto/product';\r\nimport { ProductConverterService } from './converters/product-converter.service';\r\nimport { ProductDetails } from '../models/product';\r\n\r\n// import { IProductSearch, ICatalogSearch } from '../models/ProductSearch';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CatalogService {\r\n\r\n  constructor(private http: HttpClient, private productConverter: ProductConverterService) {}\r\n\r\n  getAllProducts(pageNumber: number, pageSize: number, categoryId: string, keyword: string): Observable<SearchProductsResult>  {\r\n    // const body = { keyword: \"\", start: \"0\", isFuzzySearch: true, pageSize: \"1000\" };\r\n    const searchCriteria = new ProductSearchCriteria();\r\n    searchCriteria.pageNumber = pageNumber;\r\n    searchCriteria.pageSize = pageSize;\r\n    searchCriteria.keyword = keyword;\r\n    searchCriteria.outline = categoryId;\r\n    searchCriteria.responseGroup = ItemResponseGroup.ItemLarge;\r\n    const url = 'storefrontapi/catalog/search';\r\n    return this.http.post<SearchProductsResult>(url, searchCriteria);\r\n  }\r\n\r\n  getAllCategories(): Observable<Category[]> {\r\n    // const searchCriteria = { keyword: \"\", start: \"0\", isFuzzySearch: true, pageSize: \"1000\" };\r\n    const searchCriteria = new CategorySearchCriteria();\r\n    searchCriteria.pageSize = 1000;\r\n    searchCriteria.responseGroup = CategoryResponseGroup.Info;\r\n    const url = 'storefrontapi/categories/search';\r\n    return this.http.post<SearchCategoriesResult>(url, searchCriteria).pipe(map(x => x.categories));\r\n  }\r\n\r\n  getProduct(productId: string): Observable<ProductDetails> {\r\n    const url = 'storefrontapi/products?productIds=' + productId;\r\n    return this.http.get<IProduct[]>(url).pipe(map( x => x.map(p => this.productConverter.toProductDetails( p )) ), map(x => x.length > 0 ? x[0] : null));\r\n  }\r\n\r\n  getProductBySku(sku: string): Observable<IProduct> {\r\n    const searchCriteria = new ProductSearchCriteria();\r\n    searchCriteria.keyword = sku;\r\n    searchCriteria.pageSize = 2;\r\n    searchCriteria.responseGroup = ItemResponseGroup.ItemLarge;\r\n    const url = 'storefrontapi/catalog/search';\r\n    return this.http.post<SearchProductsResult>(url, searchCriteria).pipe(map(x => {\r\n      if (x.metaData.totalItemCount === 1 && x.products[0].sku === sku) {\r\n        return x.products[0];\r\n      }\r\n      return null;\r\n    }));\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface CatalogSearch {\r\n   products: IProduct[];\r\n }\r\n","import { Injectable } from '@angular/core';\r\nimport { IOrganization } from 'src/app/models/dto/iorganization';\r\nimport { OrganizationDetails, UpdateOrganization } from 'src/app/models/organization';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganizationConverterService {\r\n\r\n  constructor() { }\r\n\r\n  toOrganizationDetails(orgDto: IOrganization): OrganizationDetails {\r\n    const result = new OrganizationDetails();\r\n    result.name = orgDto.name;\r\n    result.id = orgDto.id;\r\n    result.billingAddress = orgDto.addresses.find(x => x.type === 1);\r\n    result.shippingAddress = orgDto.addresses.find(x => x.type === 2);\r\n    result.phoneNumber = orgDto.phones[0];\r\n    result.email = orgDto.email;\r\n    result.contactPerson = orgDto.dynamicProperties.find(x => x.name === 'contactPerson').values[0].value;\r\n    result.taxNumber = orgDto.dynamicProperties.find(x => x.name === 'taxNumber').values[0].value;\r\n    result.companyRegistrationNumber = orgDto.dynamicProperties.find(x => x.name === 'companyRegistrationNumber').values[0].value;\r\n    result.returnInvalidOrdersToCreator = orgDto.dynamicProperties.find(x => x.name === 'returnInvalidOrdersToCreator').values[0].value.toLowerCase() === 'true';\r\n    return result;\r\n  }\r\n\r\n  toUpdateOrganization(orgView: OrganizationDetails, orgForUpdate: IOrganization): UpdateOrganization {\r\n    const result = new UpdateOrganization();\r\n    result.addresses = [];\r\n    result.phones = [];\r\n    result.emails = [];\r\n    result.id = orgView.id;\r\n    result.name = orgView.name;\r\n    result.addresses.push(orgView.billingAddress, orgView.shippingAddress);\r\n    result.dynamicProperties = orgForUpdate.dynamicProperties;\r\n    result.dynamicProperties.find(x => x.name === 'contactPerson').values[0].value = orgView.contactPerson;\r\n    result.dynamicProperties.find(x => x.name === 'taxNumber').values[0].value = orgView.taxNumber;\r\n    result.dynamicProperties.find(x => x.name === 'companyRegistrationNumber').values[0].value = orgView.companyRegistrationNumber;\r\n    result.dynamicProperties.find(x => x.name === 'returnInvalidOrdersToCreator').values[0].value = orgView.returnInvalidOrdersToCreator;\r\n    result.emails.push(orgView.email);\r\n    result.phones.push(orgView.phoneNumber);\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProductDetails } from 'src/app/models/product';\r\nimport { IProduct } from 'src/app/models/dto/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductConverterService {\r\n\r\n  constructor() { }\r\n\r\n  toProductDetails(productDto: IProduct): ProductDetails {\r\n\r\n    const result = new ProductDetails();\r\n    result.id = productDto.id;\r\n    result.name = productDto.name;\r\n    result.sku = productDto.sku;\r\n    result.title = productDto.title;\r\n    result.price = productDto.price.actualPrice.formattedAmount;\r\n    const quickReview = productDto.descriptions.find(x => x.reviewType === 'QuickReview');\r\n    result.quickReview =  ( quickReview || { value: ''} ).value;\r\n    const fullReview = productDto.descriptions.find(x => x.reviewType === 'FullReview');\r\n    result.fullReview =  ( fullReview || { value: ''} ).value;\r\n    result.brand = (productDto.properties.find(x => x.name === 'Brand') || {value: ''}).value;\r\n    result.model = (productDto.properties.find(x => x.name === 'Model') || {value: ''}).value;\r\n    result.primaryImage = productDto.primaryImage;\r\n    result.images = productDto.images;\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User, AddNewUser, EditUser, EditUserPassword, EditUserPhone } from '../../models/user';\r\nimport { IUser } from 'src/app/models/dto/iuser';\r\nimport { IOrganization } from 'src/app/models/dto/iorganization';\r\nimport { UserViewAddUserModel, UserViewEditUserModel } from 'src/app/models/form';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserConverterService {\r\n\r\n  constructor() { }\r\n\r\n  toAddUser(userView: UserViewAddUserModel , organization: IOrganization ): AddNewUser {\r\n    const result = new AddNewUser();\r\n    result.email = userView.email;\r\n    result.firstName = userView.firstName;\r\n    result.lastName = userView.lastName;\r\n    result.fullName = `${userView.firstName} ${userView.lastName}`;\r\n    result.organizationId = organization.id;\r\n    result.password = userView.password;\r\n    result.role = userView.selectRole;\r\n    result.userName = userView.userName;\r\n    return result;\r\n  }\r\n\r\n  toEditUser(userView: UserViewEditUserModel, user: IUser): EditUser {\r\n    const result = new EditUser();\r\n    result.roles = [];\r\n    result.firstName = userView.firstName;\r\n    result.lastName = userView.lastName;\r\n    result.fullName = `${userView.firstName} ${userView.lastName}`;\r\n    result.roles.push(userView.selectRole);\r\n    result.email = userView.email;\r\n    result.id = user.id;\r\n    return result;\r\n  }\r\n\r\n  toEditCurrentAccount(userView: IUser): EditUser {\r\n    const result = new EditUser();\r\n    result.roles = [];\r\n    result.firstName = userView.firstName;\r\n    result.lastName = userView.lastName;\r\n    result.fullName = `${userView.firstName} ${userView.lastName}`;\r\n    result.email = userView.email;\r\n    result.roles = userView.roles.map(x => x.id) ;\r\n    result.id = userView.id;\r\n    return result;\r\n  }\r\n\r\n  toEditCurrentAccountPhoneNumber(userView: IUser): EditUserPhone {\r\n    const result = new EditUserPhone();\r\n    result.phoneNumber = userView.phoneNumber;\r\n    return result;\r\n  }\r\n}\r\n\r\n\r\n","export * from './catalog.service';\r\nexport * from './auth-guard.service';\r\n","import { Injectable, Injector } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { finalize } from \"rxjs/operators\";\r\nimport { NgBlockUI, BlockUI } from \"ng-block-ui\";\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n  @BlockUI() blockUI: NgBlockUI;\r\n  activeRequests: number = 0;\r\n\r\n  constructor() {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (this.activeRequests === 0) {\r\n      this.blockUI.start();\r\n    }\r\n\r\n    this.activeRequests++;\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.activeRequests--;\r\n        if (this.activeRequests === 0) {\r\n          this.blockUI.stop();\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { IToggleable } from '../models/itoggleable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MobileViewService {\r\n  private renderer: Renderer2;\r\n\r\n  openSidebar(component: IToggleable) {\r\n    const overlayElement = this.renderer.createElement('div');\r\n    this.renderer.addClass(overlayElement, 'overlay');\r\n    this.renderer.appendChild(document.body, overlayElement);\r\n    component.toggle();\r\n    this.renderer.listen(overlayElement, 'click', () => {\r\n      this.renderer.removeChild(document.body, overlayElement);\r\n      component.toggle();\r\n    });\r\n  }\r\n\r\n  closeSidebar(component: IToggleable) {\r\n    component.toggle();\r\n    const overlayElement = document.querySelector('.overlay');\r\n    this.renderer.removeChild(document.body, overlayElement);\r\n  }\r\n\r\n  openMobileSearch() {\r\n    const searchElement = document.querySelector('.mobile-navbar .search');\r\n    this.renderer.addClass(searchElement, 'opened');\r\n  }\r\n\r\n  closeMobileSearch() {\r\n    const searchElement = document.querySelector('.mobile-navbar .search');\r\n    this.renderer.removeClass(searchElement, 'opened');\r\n  }\r\n\r\n  constructor(rendererFactory: RendererFactory2) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap, catchError, map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IOrder, OrderSearchCriteria } from '../models/dto/iorder';\r\nimport { IOrders } from '../models/dto/iorders';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrdersService {\r\n    private heroesUrl = 'api/heroes';\r\n    private ordersUrl = 'storefrontapi/orders/search';\r\n    private usersUrl = 'api/users';\r\n    private approvalWorkflowUrl = 'api/approvalWorkflow';\r\n    private orderUrl = 'storefrontapi/orders';\r\n\r\n    constructor(\r\n        private http: HttpClient) { }\r\n\r\n    getOrders(pageNumber: number = 1, pageSize: number = 10, startDate: Date = null, endDate: Date = null, status: string = '' ) {\r\n      const searchCriteria = new OrderSearchCriteria();\r\n      searchCriteria.pageNumber = pageNumber;\r\n      searchCriteria.pageSize = pageSize;\r\n      searchCriteria.StartDate = startDate;\r\n      searchCriteria.EndDate = endDate;\r\n      if (status === 'All') {\r\n        searchCriteria.Status = '';\r\n      } else {\r\n        searchCriteria.Status = status;\r\n      }\r\n        return this.http.post(this.ordersUrl,searchCriteria).pipe(\r\n            tap(\r\n                orders => {\r\n                    this.log(`fetched ordersUrl:` + orders);\r\n                }),\r\n            catchError(this.handleError('ordersUrl', []))\r\n        );\r\n    }\r\n\r\n    getOrder(OrderNumber: string) {\r\n      return this.http.get(this.orderUrl + `/${OrderNumber}`).pipe(\r\n        tap(\r\n            order => {\r\n                this.log(`fetched ordersUrl:` + order);\r\n            }),\r\n        catchError(this.handleError('orderUrl', []))\r\n    );\r\n    }\r\n\r\n    updateOrder(order: IOrder): Observable<IOrder> {\r\n        return this.http.post<IOrder>(this.ordersUrl, order);\r\n    }\r\n\r\n    getApprovalWorkflow() {\r\n        return this.http.get(this.approvalWorkflowUrl).pipe(\r\n            tap(\r\n                workflow => {\r\n                    this.log(`fetched approvalWorkflowUrl:` + workflow);\r\n                }),\r\n            catchError(this.handleError('Error approvalWorkflowUrl', []))\r\n        );\r\n\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n\r\n    private log(message: string) {\r\n        console.log('Orders service: ' + message);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { tap, catchError } from \"rxjs/operators\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { UpdateOrganization } from '../models/organization';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class OrganizationService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserOrganization() {\r\n    console.log(\"getUserOrganization\");\r\n    return this.http.get(\"storefrontapi/account/organization/current?t=\").pipe(\r\n      tap(organization => {\r\n        this.log(`fetched organization:` + organization);\r\n      }),\r\n      catchError(this.handleError(\"organization\", []))\r\n    );\r\n  }\r\n\r\n  getOrganizationUsers(pageNumber: number, pageSize: number) {\r\n    const url = 'storefrontapi/account/organization/users/search';\r\n    const body = { pageNumber: pageNumber, start: (pageNumber - 1) * pageSize, pageSize: pageSize};\r\n    return this.http.post<any>(url,body);\r\n  }\r\n\r\n  updateOrganization(organization: UpdateOrganization) {\r\n    const url = 'storefrontapi/account/organization';\r\n    return this.http.put<any>(url, organization);\r\n  }\r\n\r\n  private handleError<T>(operation = \"operation\", result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log(\"Organization service: \" + message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User, AddNewUser, EditUser, EditUserPassword, EditUserPhone } from '../models/user';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IUser } from '../models/dto/iuser';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get<User[]>(`/users`);\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.http.get<User>(`/users/${id}`);\r\n  }\r\n\r\n  getUserName() {\r\n    console.log('getUserName');\r\n    const url = 'storefrontapi/account';\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  updateUser(user: EditUser) {\r\n    const url = 'storefrontapi/account';\r\n    return this.http.post(url, user);\r\n  }\r\n\r\n  updatePhoneNumber(phoneNumber: EditUserPhone) {\r\n    const url = 'storefrontapi/account/phonenumber';\r\n    return this.http.post(url, phoneNumber);\r\n  }\r\n\r\n  changeUserPassword(password: EditUserPassword) {\r\n    const url = 'storefrontapi/account/password';\r\n    return this.http.post(url, password);\r\n  }\r\n\r\n  deleteUser(userName: string) {\r\n    return this.http.delete('storefrontapi/account/' + userName);\r\n  }\r\n\r\n  getCurrentUser() {\r\n    console.log('getCurrentUser');\r\n    return this.http.get<User>('storefrontapi/account?t=').pipe(\r\n      tap(user => {\r\n        this.log(`fetched user:` + user);\r\n      }),\r\n      catchError(this.handleError('user', []))\r\n    );\r\n  }\r\n\r\n  registerNewUser(user: AddNewUser) {\r\n    const url = 'storefrontapi/account/user';\r\n    return this.http.post(url, user);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log('User service: ' + message);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    name: 'dev',\r\n    production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}